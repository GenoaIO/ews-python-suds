<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types" xmlns:tns="http://schemas.microsoft.com/exchange/services/2006/types" elementFormDefault="qualified" version="Exchange2007_SP1" targetNamespace="http://schemas.microsoft.com/exchange/services/2006/types" id="types">
   <xs:import namespace="http://www.w3.org/XML/1998/namespace"/>
   <xs:element type="xs:language" name="MailboxCulture"/>
   <xs:complexType name="SidAndAttributesType">
      <xs:sequence>
         <xs:element type="xs:string" name="SecurityIdentifier"/>
      </xs:sequence>
      <xs:attribute use="required" type="xs:unsignedInt" name="Attributes"/>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfGroupIdentifiersType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:SidAndAttributesType" name="GroupIdentifier"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfRestrictedGroupIdentifiersType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:SidAndAttributesType" name="RestrictedGroupIdentifier"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="SerializedSecurityContextType">
      <xs:sequence>
         <xs:element type="xs:string" name="UserSid"/>
         <xs:element type="t:NonEmptyArrayOfGroupIdentifiersType" name="GroupSids" minOccurs="0"/>
         <xs:element type="t:NonEmptyArrayOfRestrictedGroupIdentifiersType" name="RestrictedGroupSids" minOccurs="0"/>
         <xs:element type="xs:string" name="PrimarySmtpAddress" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:element type="t:SerializedSecurityContextType" name="SerializedSecurityContext"/>
   <xs:complexType name="ConnectingSIDType">
      <xs:sequence>
         <xs:element type="xs:string" name="PrincipalName" minOccurs="0"/>
         <xs:element type="xs:string" name="SID" minOccurs="0"/>
         <xs:element type="xs:string" name="PrimarySmtpAddress" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ExchangeImpersonationType">
      <xs:sequence>
         <xs:element type="t:ConnectingSIDType" name="ConnectingSID"/>
      </xs:sequence>
   </xs:complexType>
   <xs:element type="t:ExchangeImpersonationType" name="ExchangeImpersonation"/>
   <xs:simpleType name="ExchangeVersionType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="Exchange2007"/>
         <xs:enumeration value="Exchange2007_SP1"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="ProxySecurityContextType">
      <xs:simpleContent>
         <xs:extension base="xs:base64Binary">
            <xs:anyAttribute namespace="http://schemas.xmlsoap.org/soap/envelope/">
               <xs:annotation>
                  <xs:documentation>Allow attributes in the soap namespace to be used here</xs:documentation>
               </xs:annotation>
            </xs:anyAttribute>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:element type="t:ProxySecurityContextType" name="ProxySecurityContext"/>
   <xs:element type="t:ProxySecurityContextType" name="ProxySuggesterSid"/>
   <xs:element name="ServerVersionInfo">
      <xs:complexType>
         <xs:attribute use="optional" type="xs:int" name="MajorVersion"/>
         <xs:attribute use="optional" type="xs:int" name="MinorVersion"/>
         <xs:attribute use="optional" type="xs:int" name="MajorBuildNumber"/>
         <xs:attribute use="optional" type="xs:int" name="MinorBuildNumber"/>
         <xs:attribute use="optional" type="xs:string" name="Version"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="RequestServerVersion">
      <xs:complexType>
         <xs:attribute use="required" fixed="Exchange2007_SP1" type="t:ExchangeVersionType" name="Version"/>
         <xs:anyAttribute namespace="http://schemas.xmlsoap.org/soap/envelope/">
            <xs:annotation>
               <xs:documentation>Allow attributes in the soap namespace to be used here</xs:documentation>
            </xs:annotation>
         </xs:anyAttribute>
      </xs:complexType>
   </xs:element>
   <xs:simpleType name="NonEmptyStringType">
      <xs:restriction base="xs:string">
         <xs:minLength value="1"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="BaseEmailAddressType"/>
   <xs:simpleType name="MailboxTypeType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="Mailbox"/>
         <xs:enumeration value="PublicDL"/>
         <xs:enumeration value="PrivateDL"/>
         <xs:enumeration value="Contact"/>
         <xs:enumeration value="PublicFolder"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="EmailAddressType">
      <xs:annotation>
         <xs:documentation>Identifier for a fully resolved email address</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="t:BaseEmailAddressType">
            <xs:sequence>
               <xs:element type="xs:string" name="Name" minOccurs="0"/>
               <xs:element type="t:NonEmptyStringType" name="EmailAddress" minOccurs="0"/>
               <xs:element type="t:NonEmptyStringType" name="RoutingType" minOccurs="0"/>
               <xs:element type="t:MailboxTypeType" name="MailboxType" minOccurs="0"/>
               <xs:element type="t:ItemIdType" name="ItemId" minOccurs="0"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ArrayOfRecipientsType">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
         <xs:element type="t:EmailAddressType" name="Mailbox"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="SingleRecipientType">
      <xs:choice>
         <xs:element type="t:EmailAddressType" name="Mailbox"/>
      </xs:choice>
   </xs:complexType>
   <xs:simpleType name="UnindexedFieldURIType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="folder:FolderId"/>
         <xs:enumeration value="folder:ParentFolderId"/>
         <xs:enumeration value="folder:DisplayName"/>
         <xs:enumeration value="folder:UnreadCount"/>
         <xs:enumeration value="folder:TotalCount"/>
         <xs:enumeration value="folder:ChildFolderCount"/>
         <xs:enumeration value="folder:FolderClass"/>
         <xs:enumeration value="folder:SearchParameters"/>
         <xs:enumeration value="folder:ManagedFolderInformation"/>
         <xs:enumeration value="folder:PermissionSet"/>
         <xs:enumeration value="folder:EffectiveRights"/>
         <xs:enumeration value="item:ItemId"/>
         <xs:enumeration value="item:ParentFolderId"/>
         <xs:enumeration value="item:ItemClass"/>
         <xs:enumeration value="item:MimeContent"/>
         <xs:enumeration value="item:Attachments"/>
         <xs:enumeration value="item:Subject"/>
         <xs:enumeration value="item:DateTimeReceived"/>
         <xs:enumeration value="item:Size"/>
         <xs:enumeration value="item:Categories"/>
         <xs:enumeration value="item:HasAttachments"/>
         <xs:enumeration value="item:Importance"/>
         <xs:enumeration value="item:InReplyTo"/>
         <xs:enumeration value="item:InternetMessageHeaders"/>
         <xs:enumeration value="item:IsDraft"/>
         <xs:enumeration value="item:IsFromMe"/>
         <xs:enumeration value="item:IsResend"/>
         <xs:enumeration value="item:IsSubmitted"/>
         <xs:enumeration value="item:IsUnmodified"/>
         <xs:enumeration value="item:DateTimeSent"/>
         <xs:enumeration value="item:DateTimeCreated"/>
         <xs:enumeration value="item:Body"/>
         <xs:enumeration value="item:ResponseObjects"/>
         <xs:enumeration value="item:Sensitivity"/>
         <xs:enumeration value="item:ReminderDueBy"/>
         <xs:enumeration value="item:ReminderIsSet"/>
         <xs:enumeration value="item:ReminderMinutesBeforeStart"/>
         <xs:enumeration value="item:DisplayTo"/>
         <xs:enumeration value="item:DisplayCc"/>
         <xs:enumeration value="item:Culture"/>
         <xs:enumeration value="item:EffectiveRights"/>
         <xs:enumeration value="item:LastModifiedName"/>
         <xs:enumeration value="item:LastModifiedTime"/>
         <xs:enumeration value="message:ConversationIndex"/>
         <xs:enumeration value="message:ConversationTopic"/>
         <xs:enumeration value="message:InternetMessageId"/>
         <xs:enumeration value="message:IsRead"/>
         <xs:enumeration value="message:IsResponseRequested"/>
         <xs:enumeration value="message:IsReadReceiptRequested"/>
         <xs:enumeration value="message:IsDeliveryReceiptRequested"/>
         <xs:enumeration value="message:ReceivedBy"/>
         <xs:enumeration value="message:ReceivedRepresenting"/>
         <xs:enumeration value="message:References"/>
         <xs:enumeration value="message:ReplyTo"/>
         <xs:enumeration value="message:From"/>
         <xs:enumeration value="message:Sender"/>
         <xs:enumeration value="message:ToRecipients"/>
         <xs:enumeration value="message:CcRecipients"/>
         <xs:enumeration value="message:BccRecipients"/>
         <xs:enumeration value="meeting:AssociatedCalendarItemId"/>
         <xs:enumeration value="meeting:IsDelegated"/>
         <xs:enumeration value="meeting:IsOutOfDate"/>
         <xs:enumeration value="meeting:HasBeenProcessed"/>
         <xs:enumeration value="meeting:ResponseType"/>
         <xs:enumeration value="meetingRequest:MeetingRequestType"/>
         <xs:enumeration value="meetingRequest:IntendedFreeBusyStatus"/>
         <xs:enumeration value="calendar:Start"/>
         <xs:enumeration value="calendar:End"/>
         <xs:enumeration value="calendar:OriginalStart"/>
         <xs:enumeration value="calendar:IsAllDayEvent"/>
         <xs:enumeration value="calendar:LegacyFreeBusyStatus"/>
         <xs:enumeration value="calendar:Location"/>
         <xs:enumeration value="calendar:When"/>
         <xs:enumeration value="calendar:IsMeeting"/>
         <xs:enumeration value="calendar:IsCancelled"/>
         <xs:enumeration value="calendar:IsRecurring"/>
         <xs:enumeration value="calendar:MeetingRequestWasSent"/>
         <xs:enumeration value="calendar:IsResponseRequested"/>
         <xs:enumeration value="calendar:CalendarItemType"/>
         <xs:enumeration value="calendar:MyResponseType"/>
         <xs:enumeration value="calendar:Organizer"/>
         <xs:enumeration value="calendar:RequiredAttendees"/>
         <xs:enumeration value="calendar:OptionalAttendees"/>
         <xs:enumeration value="calendar:Resources"/>
         <xs:enumeration value="calendar:ConflictingMeetingCount"/>
         <xs:enumeration value="calendar:AdjacentMeetingCount"/>
         <xs:enumeration value="calendar:ConflictingMeetings"/>
         <xs:enumeration value="calendar:AdjacentMeetings"/>
         <xs:enumeration value="calendar:Duration"/>
         <xs:enumeration value="calendar:TimeZone"/>
         <xs:enumeration value="calendar:AppointmentReplyTime"/>
         <xs:enumeration value="calendar:AppointmentSequenceNumber"/>
         <xs:enumeration value="calendar:AppointmentState"/>
         <xs:enumeration value="calendar:Recurrence"/>
         <xs:enumeration value="calendar:FirstOccurrence"/>
         <xs:enumeration value="calendar:LastOccurrence"/>
         <xs:enumeration value="calendar:ModifiedOccurrences"/>
         <xs:enumeration value="calendar:DeletedOccurrences"/>
         <xs:enumeration value="calendar:MeetingTimeZone"/>
         <xs:enumeration value="calendar:ConferenceType"/>
         <xs:enumeration value="calendar:AllowNewTimeProposal"/>
         <xs:enumeration value="calendar:IsOnlineMeeting"/>
         <xs:enumeration value="calendar:MeetingWorkspaceUrl"/>
         <xs:enumeration value="calendar:NetShowUrl"/>
         <xs:enumeration value="calendar:UID"/>
         <xs:enumeration value="calendar:RecurrenceId"/>
         <xs:enumeration value="calendar:DateTimeStamp"/>
         <xs:enumeration value="task:ActualWork"/>
         <xs:enumeration value="task:AssignedTime"/>
         <xs:enumeration value="task:BillingInformation"/>
         <xs:enumeration value="task:ChangeCount"/>
         <xs:enumeration value="task:Companies"/>
         <xs:enumeration value="task:CompleteDate"/>
         <xs:enumeration value="task:Contacts"/>
         <xs:enumeration value="task:DelegationState"/>
         <xs:enumeration value="task:Delegator"/>
         <xs:enumeration value="task:DueDate"/>
         <xs:enumeration value="task:IsAssignmentEditable"/>
         <xs:enumeration value="task:IsComplete"/>
         <xs:enumeration value="task:IsRecurring"/>
         <xs:enumeration value="task:IsTeamTask"/>
         <xs:enumeration value="task:Mileage"/>
         <xs:enumeration value="task:Owner"/>
         <xs:enumeration value="task:PercentComplete"/>
         <xs:enumeration value="task:Recurrence"/>
         <xs:enumeration value="task:StartDate"/>
         <xs:enumeration value="task:Status"/>
         <xs:enumeration value="task:StatusDescription"/>
         <xs:enumeration value="task:TotalWork"/>
         <xs:enumeration value="contacts:AssistantName"/>
         <xs:enumeration value="contacts:Birthday"/>
         <xs:enumeration value="contacts:BusinessHomePage"/>
         <xs:enumeration value="contacts:Children"/>
         <xs:enumeration value="contacts:Companies"/>
         <xs:enumeration value="contacts:CompanyName"/>
         <xs:enumeration value="contacts:CompleteName"/>
         <xs:enumeration value="contacts:ContactSource"/>
         <xs:enumeration value="contacts:Culture"/>
         <xs:enumeration value="contacts:Department"/>
         <xs:enumeration value="contacts:DisplayName"/>
         <xs:enumeration value="contacts:EmailAddresses"/>
         <xs:enumeration value="contacts:FileAs"/>
         <xs:enumeration value="contacts:FileAsMapping"/>
         <xs:enumeration value="contacts:Generation"/>
         <xs:enumeration value="contacts:GivenName"/>
         <xs:enumeration value="contacts:ImAddresses"/>
         <xs:enumeration value="contacts:Initials"/>
         <xs:enumeration value="contacts:JobTitle"/>
         <xs:enumeration value="contacts:Manager"/>
         <xs:enumeration value="contacts:MiddleName"/>
         <xs:enumeration value="contacts:Mileage"/>
         <xs:enumeration value="contacts:Nickname"/>
         <xs:enumeration value="contacts:OfficeLocation"/>
         <xs:enumeration value="contacts:PhoneNumbers"/>
         <xs:enumeration value="contacts:PhysicalAddresses"/>
         <xs:enumeration value="contacts:PostalAddressIndex"/>
         <xs:enumeration value="contacts:Profession"/>
         <xs:enumeration value="contacts:SpouseName"/>
         <xs:enumeration value="contacts:Surname"/>
         <xs:enumeration value="contacts:WeddingAnniversary"/>
         <xs:enumeration value="postitem:PostedTime"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="DictionaryURIType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="item:InternetMessageHeader"/>
         <xs:enumeration value="contacts:ImAddress"/>
         <xs:enumeration value="contacts:PhysicalAddress:Street"/>
         <xs:enumeration value="contacts:PhysicalAddress:City"/>
         <xs:enumeration value="contacts:PhysicalAddress:State"/>
         <xs:enumeration value="contacts:PhysicalAddress:CountryOrRegion"/>
         <xs:enumeration value="contacts:PhysicalAddress:PostalCode"/>
         <xs:enumeration value="contacts:PhoneNumber"/>
         <xs:enumeration value="contacts:EmailAddress"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="ExceptionPropertyURIType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="attachment:Name"/>
         <xs:enumeration value="attachment:ContentType"/>
         <xs:enumeration value="attachment:Content"/>
         <xs:enumeration value="recurrence:Month"/>
         <xs:enumeration value="recurrence:DayOfWeekIndex"/>
         <xs:enumeration value="recurrence:DaysOfWeek"/>
         <xs:enumeration value="recurrence:DayOfMonth"/>
         <xs:enumeration value="recurrence:Interval"/>
         <xs:enumeration value="recurrence:NumberOfOccurrences"/>
         <xs:enumeration value="timezone:Offset"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="GuidType">
      <xs:annotation>
         <xs:documentation>
        The regular expression captures the standard representation of a GUID
      </xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:pattern value="[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="DistinguishedPropertySetType">
      <xs:annotation>
         <xs:documentation>
        Defines the well known property set ids for extended properties.
      </xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="Meeting"/>
         <xs:enumeration value="Appointment"/>
         <xs:enumeration value="Common"/>
         <xs:enumeration value="PublicStrings"/>
         <xs:enumeration value="Address"/>
         <xs:enumeration value="InternetHeaders"/>
         <xs:enumeration value="CalendarAssistant"/>
         <xs:enumeration value="UnifiedMessaging"/>
         <xs:enumeration value="Task"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="MapiPropertyTypeType">
      <xs:annotation>
         <xs:documentation>
        Includes all of the extended property types that we support.  Note that Error, Null,
        Object and Object array can not be used in restrictions, or for setting/getting values.
        They are only there for error reporting purposes.
      </xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="ApplicationTime"/>
         <xs:enumeration value="ApplicationTimeArray"/>
         <xs:enumeration value="Binary"/>
         <xs:enumeration value="BinaryArray"/>
         <xs:enumeration value="Boolean"/>
         <xs:enumeration value="CLSID"/>
         <xs:enumeration value="CLSIDArray"/>
         <xs:enumeration value="Currency"/>
         <xs:enumeration value="CurrencyArray"/>
         <xs:enumeration value="Double"/>
         <xs:enumeration value="DoubleArray"/>
         <xs:enumeration value="Error"/>
         <xs:enumeration value="Float"/>
         <xs:enumeration value="FloatArray"/>
         <xs:enumeration value="Integer"/>
         <xs:enumeration value="IntegerArray"/>
         <xs:enumeration value="Long"/>
         <xs:enumeration value="LongArray"/>
         <xs:enumeration value="Null"/>
         <xs:enumeration value="Object"/>
         <xs:enumeration value="ObjectArray"/>
         <xs:enumeration value="Short"/>
         <xs:enumeration value="ShortArray"/>
         <xs:enumeration value="SystemTime"/>
         <xs:enumeration value="SystemTimeArray"/>
         <xs:enumeration value="String"/>
         <xs:enumeration value="StringArray"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType abstract="true" name="BasePathToElementType"/>
   <xs:complexType name="PathToUnindexedFieldType">
      <xs:complexContent>
         <xs:extension base="t:BasePathToElementType">
            <xs:attribute use="required" type="t:UnindexedFieldURIType" name="FieldURI"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="PathToIndexedFieldType">
      <xs:complexContent>
         <xs:extension base="t:BasePathToElementType">
            <xs:attribute use="required" type="t:DictionaryURIType" name="FieldURI"/>
            <xs:attribute use="required" type="xs:string" name="FieldIndex"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="PathToExceptionFieldType">
      <xs:complexContent>
         <xs:extension base="t:BasePathToElementType">
            <xs:attribute use="required" type="t:ExceptionPropertyURIType" name="FieldURI"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:simpleType name="PropertyTagType">
      <xs:annotation>
         <xs:documentation>
        This type represents the property tag (MINUS the type part).  There are two options
        for representation:
        1.  Hex ==&gt; 0x3fa4
        2.  Decimal ==&gt; 0-65535
      </xs:documentation>
      </xs:annotation>
      <xs:union memberTypes="xs:unsignedShort">
         <xs:simpleType id="HexPropertyTagType">
            <xs:restriction base="xs:string">
               <xs:pattern value="(0x|0X)[0-9A-Fa-f]{1,4}"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:union>
   </xs:simpleType>
   <xs:complexType name="PathToExtendedFieldType">
      <xs:annotation>
         <xs:documentation>
        Represents an extended property.  Note that there are only a couple of valid attribute
        combinations.  Note that all occurances require the PropertyType attribute.

        1.  (DistinguishedPropertySetId || PropertySetId) + (PropertyName || Property Id)
        2.  PropertyTag

      </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="t:BasePathToElementType">
            <xs:attribute use="optional" type="t:DistinguishedPropertySetType" name="DistinguishedPropertySetId"/>
            <xs:attribute use="optional" type="t:GuidType" name="PropertySetId"/>
            <xs:attribute use="optional" type="t:PropertyTagType" name="PropertyTag"/>
            <xs:attribute use="optional" type="xs:string" name="PropertyName"/>
            <xs:attribute use="optional" type="xs:int" name="PropertyId"/>
            <xs:attribute use="required" type="t:MapiPropertyTypeType" name="PropertyType"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element abstract="true" type="t:BasePathToElementType" name="Path"/>
   <xs:element substitutionGroup="t:Path" type="t:PathToUnindexedFieldType" name="FieldURI"/>
   <xs:element substitutionGroup="t:Path" type="t:PathToIndexedFieldType" name="IndexedFieldURI"/>
   <xs:element substitutionGroup="t:Path" type="t:PathToExtendedFieldType" name="ExtendedFieldURI"/>
   <xs:element type="t:PathToExceptionFieldType" name="ExceptionFieldURI"/>
   <xs:complexType name="NonEmptyArrayOfPathsToElementType">
      <xs:choice maxOccurs="unbounded">
         <xs:element ref="t:FieldURI"/>
         <xs:element ref="t:IndexedFieldURI"/>
         <xs:element ref="t:ExtendedFieldURI"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfPropertyValuesType">
      <xs:choice>
         <xs:element maxOccurs="unbounded" type="xs:string" name="Value"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="ExtendedPropertyType">
      <xs:annotation>
         <xs:documentation>
        Represents an extended property instance (both its path identifier along with its
        associated value).
      </xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element type="t:PathToExtendedFieldType" name="ExtendedFieldURI"/>
         <xs:choice>
            <xs:element type="xs:string" name="Value"/>
            <xs:element type="t:NonEmptyArrayOfPropertyValuesType" name="Values"/>
         </xs:choice>
      </xs:sequence>
   </xs:complexType>
   <xs:simpleType name="FolderQueryTraversalType">
      <xs:annotation>
         <xs:documentation>Types of sub-tree traversal for deletion and enumeration</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="Shallow"/>
         <xs:enumeration value="Deep"/>
         <xs:enumeration value="SoftDeleted"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="SearchFolderTraversalType">
      <xs:annotation>
         <xs:documentation>Types of sub-tree traversal for deletion and enumeration</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="Shallow"/>
         <xs:enumeration value="Deep"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="ItemQueryTraversalType">
      <xs:annotation>
         <xs:documentation>Types of sub-tree traversal for deletion and enumeration</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="Shallow"/>
         <xs:enumeration value="SoftDeleted"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="DefaultShapeNamesType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="IdOnly"/>
         <xs:enumeration value="Default"/>
         <xs:enumeration value="AllProperties"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="BodyTypeResponseType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="Best"/>
         <xs:enumeration value="HTML"/>
         <xs:enumeration value="Text"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="FolderResponseShapeType">
      <xs:sequence>
         <xs:element type="t:DefaultShapeNamesType" name="BaseShape"/>
         <xs:element type="t:NonEmptyArrayOfPathsToElementType" name="AdditionalProperties" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ItemResponseShapeType">
      <xs:sequence>
         <xs:element type="t:DefaultShapeNamesType" name="BaseShape"/>
         <xs:element type="xs:boolean" name="IncludeMimeContent" minOccurs="0"/>
         <xs:element type="t:BodyTypeResponseType" name="BodyType" minOccurs="0"/>
         <xs:element type="t:NonEmptyArrayOfPathsToElementType" name="AdditionalProperties" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="AttachmentResponseShapeType">
      <xs:sequence>
         <xs:element type="xs:boolean" name="IncludeMimeContent" minOccurs="0"/>
         <xs:element type="t:BodyTypeResponseType" name="BodyType" minOccurs="0"/>
         <xs:element type="t:NonEmptyArrayOfPathsToElementType" name="AdditionalProperties" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:simpleType name="DisposalType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="HardDelete"/>
         <xs:enumeration value="SoftDelete"/>
         <xs:enumeration value="MoveToDeletedItems"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="ConflictResolutionType">
      <xs:annotation>
         <xs:documentation>Type of conflict resolution to attempt during update</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="NeverOverwrite"/>
         <xs:enumeration value="AutoResolve"/>
         <xs:enumeration value="AlwaysOverwrite"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="ResponseClassType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="Success"/>
         <xs:enumeration value="Warning"/>
         <xs:enumeration value="Error"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType abstract="true" name="ChangeDescriptionType">
      <xs:sequence>
         <xs:choice maxOccurs="unbounded">
            <xs:element ref="t:FieldURI"/>
            <xs:element ref="t:IndexedFieldURI"/>
            <xs:element ref="t:ExtendedFieldURI"/>
         </xs:choice>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ItemChangeDescriptionType">
      <xs:complexContent>
         <xs:extension base="t:ChangeDescriptionType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="FolderChangeDescriptionType">
      <xs:complexContent>
         <xs:extension base="t:ChangeDescriptionType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="SetItemFieldType">
      <xs:complexContent>
         <xs:extension base="t:ItemChangeDescriptionType">
            <xs:choice>
               <xs:element type="t:ItemType" name="Item"/>
               <xs:element type="t:MessageType" name="Message"/>
               <xs:element type="t:CalendarItemType" name="CalendarItem"/>
               <xs:element type="t:ContactItemType" name="Contact"/>
               <xs:element type="t:DistributionListType" name="DistributionList"/>
               <xs:element type="t:MeetingMessageType" name="MeetingMessage"/>
               <xs:element type="t:MeetingRequestMessageType" name="MeetingRequest"/>
               <xs:element type="t:MeetingResponseMessageType" name="MeetingResponse"/>
               <xs:element type="t:MeetingCancellationMessageType" name="MeetingCancellation"/>
               <xs:element type="t:TaskType" name="Task"/>
               <xs:element type="t:PostItemType" name="PostItem"/>
            </xs:choice>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="SetFolderFieldType">
      <xs:complexContent>
         <xs:extension base="t:FolderChangeDescriptionType">
            <xs:choice>
               <xs:element type="t:FolderType" name="Folder"/>
               <xs:element type="t:CalendarFolderType" name="CalendarFolder"/>
               <xs:element type="t:ContactsFolderType" name="ContactsFolder"/>
               <xs:element type="t:SearchFolderType" name="SearchFolder"/>
               <xs:element type="t:TasksFolderType" name="TasksFolder"/>
            </xs:choice>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="DeleteItemFieldType">
      <xs:complexContent>
         <xs:extension base="t:ItemChangeDescriptionType">
            <xs:sequence/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="DeleteFolderFieldType">
      <xs:complexContent>
         <xs:extension base="t:FolderChangeDescriptionType">
            <xs:sequence/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="AppendToItemFieldType">
      <xs:complexContent>
         <xs:extension base="t:ItemChangeDescriptionType">
            <xs:choice>
               <xs:element type="t:ItemType" name="Item"/>
               <xs:element type="t:MessageType" name="Message"/>
               <xs:element type="t:CalendarItemType" name="CalendarItem"/>
               <xs:element type="t:ContactItemType" name="Contact"/>
               <xs:element type="t:DistributionListType" name="DistributionList"/>
               <xs:element type="t:MeetingMessageType" name="MeetingMessage"/>
               <xs:element type="t:MeetingRequestMessageType" name="MeetingRequest"/>
               <xs:element type="t:MeetingResponseMessageType" name="MeetingResponse"/>
               <xs:element type="t:MeetingCancellationMessageType" name="MeetingCancellation"/>
               <xs:element type="t:TaskType" name="Task"/>
               <xs:element type="t:PostItemType" name="PostItem"/>
            </xs:choice>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="AppendToFolderFieldType">
      <xs:complexContent>
         <xs:extension base="t:FolderChangeDescriptionType">
            <xs:sequence>
               <xs:choice>
                  <xs:element type="t:FolderType" name="Folder"/>
                  <xs:element type="t:CalendarFolderType" name="CalendarFolder"/>
                  <xs:element type="t:ContactsFolderType" name="ContactsFolder"/>
                  <xs:element type="t:SearchFolderType" name="SearchFolder"/>
                  <xs:element type="t:TasksFolderType" name="TasksFolder"/>
               </xs:choice>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfItemChangeDescriptionsType">
      <xs:choice maxOccurs="unbounded">
         <xs:element type="t:AppendToItemFieldType" name="AppendToItemField"/>
         <xs:element type="t:SetItemFieldType" name="SetItemField"/>
         <xs:element type="t:DeleteItemFieldType" name="DeleteItemField"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfFolderChangeDescriptionsType">
      <xs:choice maxOccurs="unbounded">
         <xs:element type="t:AppendToFolderFieldType" name="AppendToFolderField"/>
         <xs:element type="t:SetFolderFieldType" name="SetFolderField"/>
         <xs:element type="t:DeleteFolderFieldType" name="DeleteFolderField"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="ItemChangeType">
      <xs:sequence>
         <xs:choice>
            <xs:element type="t:ItemIdType" name="ItemId"/>
            <xs:element type="t:OccurrenceItemIdType" name="OccurrenceItemId"/>
            <xs:element type="t:RecurringMasterItemIdType" name="RecurringMasterItemId"/>
         </xs:choice>
         <xs:element type="t:NonEmptyArrayOfItemChangeDescriptionsType" name="Updates"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfItemChangesType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:ItemChangeType" name="ItemChange"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="InternetHeaderType">
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attribute use="required" type="xs:string" name="HeaderName"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfInternetHeadersType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:InternetHeaderType" name="InternetMessageHeader"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="RequestAttachmentIdType">
      <xs:complexContent>
         <xs:extension base="t:BaseItemIdType">
            <xs:attribute use="required" type="xs:string" name="Id"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="AttachmentIdType">
      <xs:complexContent>
         <xs:extension base="t:RequestAttachmentIdType">
            <xs:attribute use="optional" type="xs:string" name="RootItemId"/>
            <xs:attribute use="optional" type="xs:string" name="RootItemChangeKey"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="RootItemIdType">
      <xs:complexContent>
         <xs:extension base="t:BaseItemIdType">
            <xs:attribute use="required" type="xs:string" name="RootItemId"/>
            <xs:attribute use="required" type="xs:string" name="RootItemChangeKey"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfRequestAttachmentIdsType">
      <xs:choice maxOccurs="unbounded" minOccurs="1">
         <xs:element type="t:RequestAttachmentIdType" name="AttachmentId"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="AttachmentType">
      <xs:sequence>
         <xs:element maxOccurs="1" type="t:AttachmentIdType" name="AttachmentId" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:string" name="Name" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:string" name="ContentType" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:string" name="ContentId" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:string" name="ContentLocation" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ItemAttachmentType">
      <xs:complexContent>
         <xs:extension base="t:AttachmentType">
            <xs:choice maxOccurs="1" minOccurs="0">
               <xs:element type="t:ItemType" name="Item"/>
               <xs:element type="t:MessageType" name="Message"/>
               <xs:element type="t:CalendarItemType" name="CalendarItem"/>
               <xs:element type="t:ContactItemType" name="Contact"/>
               <xs:element type="t:MeetingMessageType" name="MeetingMessage"/>
               <xs:element type="t:MeetingRequestMessageType" name="MeetingRequest"/>
               <xs:element type="t:MeetingResponseMessageType" name="MeetingResponse"/>
               <xs:element type="t:MeetingCancellationMessageType" name="MeetingCancellation"/>
               <xs:element type="t:TaskType" name="Task"/>
               <xs:element type="t:PostItemType" name="PostItem"/>
            </xs:choice>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="SyncFolderItemsCreateOrUpdateType">
      <xs:choice>
         <xs:element type="t:ItemType" name="Item"/>
         <xs:element type="t:MessageType" name="Message"/>
         <xs:element type="t:CalendarItemType" name="CalendarItem"/>
         <xs:element type="t:ContactItemType" name="Contact"/>
         <xs:element type="t:DistributionListType" name="DistributionList"/>
         <xs:element type="t:MeetingMessageType" name="MeetingMessage"/>
         <xs:element type="t:MeetingRequestMessageType" name="MeetingRequest"/>
         <xs:element type="t:MeetingResponseMessageType" name="MeetingResponse"/>
         <xs:element type="t:MeetingCancellationMessageType" name="MeetingCancellation"/>
         <xs:element type="t:TaskType" name="Task"/>
         <xs:element type="t:PostItemType" name="PostItem"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="FileAttachmentType">
      <xs:complexContent>
         <xs:extension base="t:AttachmentType">
            <xs:sequence>
               <xs:element maxOccurs="1" type="xs:base64Binary" name="Content" minOccurs="0"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ArrayOfAttachmentsType">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
         <xs:element type="t:ItemAttachmentType" name="ItemAttachment"/>
         <xs:element type="t:FileAttachmentType" name="FileAttachment"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfAttachmentsType">
      <xs:choice maxOccurs="unbounded" minOccurs="1">
         <xs:element type="t:ItemAttachmentType" name="ItemAttachment"/>
         <xs:element type="t:FileAttachmentType" name="FileAttachment"/>
      </xs:choice>
   </xs:complexType>
   <xs:simpleType name="SensitivityChoicesType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="Normal"/>
         <xs:enumeration value="Personal"/>
         <xs:enumeration value="Private"/>
         <xs:enumeration value="Confidential"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="ImportanceChoicesType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="Low"/>
         <xs:enumeration value="Normal"/>
         <xs:enumeration value="High"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="BodyTypeType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="HTML"/>
         <xs:enumeration value="Text"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="BodyType">
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attribute use="required" type="t:BodyTypeType" name="BodyType"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType abstract="true" name="BaseFolderIdType">
      <xs:annotation>
         <xs:documentation>Utility type which should never appear in user documents</xs:documentation>
      </xs:annotation>
   </xs:complexType>
   <xs:simpleType name="FolderClassType">
      <xs:restriction base="xs:string"/>
   </xs:simpleType>
   <xs:simpleType name="DistinguishedFolderIdNameType">
      <xs:annotation>
         <xs:documentation>URIs for the distinguished folders accessible from a mailbox</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="calendar"/>
         <xs:enumeration value="contacts"/>
         <xs:enumeration value="deleteditems"/>
         <xs:enumeration value="drafts"/>
         <xs:enumeration value="inbox"/>
         <xs:enumeration value="journal"/>
         <xs:enumeration value="notes"/>
         <xs:enumeration value="outbox"/>
         <xs:enumeration value="sentitems"/>
         <xs:enumeration value="tasks"/>
         <xs:enumeration value="msgfolderroot"/>
         <xs:enumeration value="publicfoldersroot"/>
         <xs:enumeration value="root"/>
         <xs:enumeration value="junkemail"/>
         <xs:enumeration value="searchfolders"/>
         <xs:enumeration value="voicemail"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="DistinguishedFolderIdType">
      <xs:annotation>
         <xs:documentation>Identifier for a distinguished folder</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="t:BaseFolderIdType">
            <xs:sequence>
               <xs:element type="t:EmailAddressType" name="Mailbox" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute use="required" type="t:DistinguishedFolderIdNameType" name="Id"/>
            <xs:attribute use="optional" type="xs:string" name="ChangeKey"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="FolderIdType">
      <xs:annotation>
         <xs:documentation>Identifier for a fully resolved folder</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="t:BaseFolderIdType">
            <xs:attribute use="required" type="xs:string" name="Id"/>
            <xs:attribute use="optional" type="xs:string" name="ChangeKey"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfBaseFolderIdsType">
      <xs:choice maxOccurs="unbounded" minOccurs="1">
         <xs:element type="t:FolderIdType" name="FolderId"/>
         <xs:element type="t:DistinguishedFolderIdType" name="DistinguishedFolderId"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="TargetFolderIdType">
      <xs:choice>
         <xs:element type="t:FolderIdType" name="FolderId"/>
         <xs:element type="t:DistinguishedFolderIdType" name="DistinguishedFolderId"/>
      </xs:choice>
   </xs:complexType>
   <xs:attributeGroup name="FindResponsePagingAttributes">
      <xs:attribute use="optional" type="xs:int" name="IndexedPagingOffset"/>
      <xs:attribute use="optional" type="xs:int" name="NumeratorOffset"/>
      <xs:attribute use="optional" type="xs:int" name="AbsoluteDenominator"/>
      <xs:attribute use="optional" type="xs:boolean" name="IncludesLastItemInRange"/>
      <xs:attribute use="optional" type="xs:int" name="TotalItemsInView"/>
   </xs:attributeGroup>
   <xs:complexType name="FindFolderParentType">
      <xs:sequence>
         <xs:element type="t:ArrayOfFoldersType" name="Folders" minOccurs="0"/>
      </xs:sequence>
      <xs:attributeGroup ref="t:FindResponsePagingAttributes"/>
   </xs:complexType>
   <xs:complexType abstract="true" name="BaseFolderType">
      <xs:sequence>
         <xs:element type="t:FolderIdType" name="FolderId" minOccurs="0"/>
         <xs:element type="t:FolderIdType" name="ParentFolderId" minOccurs="0"/>
         <xs:element type="xs:string" name="FolderClass" minOccurs="0"/>
         <xs:element type="xs:string" name="DisplayName" minOccurs="0"/>
         <xs:element type="xs:int" name="TotalCount" minOccurs="0"/>
         <xs:element type="xs:int" name="ChildFolderCount" minOccurs="0"/>
         <xs:element maxOccurs="unbounded" type="t:ExtendedPropertyType" name="ExtendedProperty" minOccurs="0"/>
         <xs:element type="t:ManagedFolderInformationType" name="ManagedFolderInformation" minOccurs="0"/>
         <xs:element type="t:EffectiveRightsType" name="EffectiveRights" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ManagedFolderInformationType">
      <xs:annotation>
         <xs:documentation>Compound property for Managed Folder related information for Managed Folders.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element type="xs:boolean" name="CanDelete" minOccurs="0"/>
         <xs:element type="xs:boolean" name="CanRenameOrMove" minOccurs="0"/>
         <xs:element type="xs:boolean" name="MustDisplayComment" minOccurs="0"/>
         <xs:element type="xs:boolean" name="HasQuota" minOccurs="0"/>
         <xs:element type="xs:boolean" name="IsManagedFoldersRoot" minOccurs="0"/>
         <xs:element type="xs:string" name="ManagedFolderId" minOccurs="0"/>
         <xs:element type="xs:string" name="Comment" minOccurs="0"/>
         <xs:element type="xs:int" name="StorageQuota" minOccurs="0"/>
         <xs:element type="xs:int" name="FolderSize" minOccurs="0"/>
         <xs:element type="xs:string" name="HomePage" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="FolderType">
      <xs:complexContent>
         <xs:extension base="t:BaseFolderType">
            <xs:sequence>
               <xs:element type="t:PermissionSetType" name="PermissionSet" minOccurs="0"/>
               <xs:element type="xs:int" name="UnreadCount" minOccurs="0"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="CalendarFolderType">
      <xs:complexContent>
         <xs:extension base="t:BaseFolderType">
            <xs:sequence>
               <xs:element type="t:CalendarPermissionSetType" name="PermissionSet" minOccurs="0"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ContactsFolderType">
      <xs:complexContent>
         <xs:extension base="t:BaseFolderType">
            <xs:sequence>
               <xs:element type="t:PermissionSetType" name="PermissionSet" minOccurs="0"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="SearchFolderType">
      <xs:complexContent>
         <xs:extension base="t:FolderType">
            <xs:sequence>
               <xs:element type="t:SearchParametersType" name="SearchParameters" minOccurs="0"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="TasksFolderType">
      <xs:complexContent>
         <xs:extension base="t:FolderType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfFoldersType">
      <xs:choice maxOccurs="unbounded" minOccurs="1">
         <xs:element type="t:FolderType" name="Folder"/>
         <xs:element type="t:CalendarFolderType" name="CalendarFolder"/>
         <xs:element type="t:ContactsFolderType" name="ContactsFolder"/>
         <xs:element type="t:SearchFolderType" name="SearchFolder"/>
         <xs:element type="t:TasksFolderType" name="TasksFolder"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="ArrayOfFoldersType">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
         <xs:element type="t:FolderType" name="Folder"/>
         <xs:element type="t:CalendarFolderType" name="CalendarFolder"/>
         <xs:element type="t:ContactsFolderType" name="ContactsFolder"/>
         <xs:element type="t:SearchFolderType" name="SearchFolder"/>
         <xs:element type="t:TasksFolderType" name="TasksFolder"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType abstract="true" name="BaseItemIdType">
      <xs:annotation>
         <xs:documentation>Abstract base type for item identifiers.  Should never be used in web service calls</xs:documentation>
      </xs:annotation>
   </xs:complexType>
   <xs:element type="t:BaseItemIdType" name="BaseItemId"/>
   <xs:simpleType name="DerivedItemIdType">
      <xs:restriction base="xs:string"/>
   </xs:simpleType>
   <xs:complexType name="ItemIdType">
      <xs:annotation>
         <xs:documentation>Identifier for a fully resolved item</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="t:BaseItemIdType">
            <xs:attribute use="required" type="xs:string" name="Id"/>
            <xs:attribute use="optional" type="xs:string" name="ChangeKey"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfBaseItemIdsType">
      <xs:choice maxOccurs="unbounded" minOccurs="1">
         <xs:element type="t:ItemIdType" name="ItemId"/>
         <xs:element type="t:OccurrenceItemIdType" name="OccurrenceItemId"/>
         <xs:element type="t:RecurringMasterItemIdType" name="RecurringMasterItemId"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="ArrayOfBaseItemIdsType">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
         <xs:element type="t:ItemIdType" name="ItemId"/>
      </xs:choice>
   </xs:complexType>
   <xs:simpleType name="ItemClassType">
      <xs:restriction base="xs:string"/>
   </xs:simpleType>
   <xs:complexType abstract="true" name="ResponseObjectCoreType">
      <xs:annotation>
         <xs:documentation>
        Internal abstract base type for reply objects.
        Should not appear in client code
      </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="t:MessageType">
            <xs:sequence>
               <xs:element type="t:ItemIdType" name="ReferenceItemId" minOccurs="0"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType abstract="true" name="ResponseObjectType">
      <xs:annotation>
         <xs:documentation>Abstract base type for reply objects</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="t:ResponseObjectCoreType">
            <xs:attribute use="optional" type="xs:string" name="ObjectName">
               <xs:annotation>
                  <xs:documentation>
              The name of this reply object class as an English string.  The client
              application is required to translate it if it&apos;s running in a different locale
            </xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfResponseObjectsType">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
         <xs:element type="t:AcceptItemType" name="AcceptItem"/>
         <xs:element type="t:TentativelyAcceptItemType" name="TentativelyAcceptItem"/>
         <xs:element type="t:DeclineItemType" name="DeclineItem"/>
         <xs:element type="t:ReplyToItemType" name="ReplyToItem"/>
         <xs:element type="t:ForwardItemType" name="ForwardItem"/>
         <xs:element type="t:ReplyAllToItemType" name="ReplyAllToItem"/>
         <xs:element type="t:CancelCalendarItemType" name="CancelCalendarItem"/>
         <xs:element type="t:RemoveItemType" name="RemoveItem"/>
         <xs:element type="t:SuppressReadReceiptType" name="SuppressReadReceipt"/>
         <xs:element type="t:PostReplyItemType" name="PostReplyItem"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="FolderChangeType">
      <xs:sequence>
         <xs:choice>
            <xs:element type="t:FolderIdType" name="FolderId"/>
            <xs:element type="t:DistinguishedFolderIdType" name="DistinguishedFolderId"/>
         </xs:choice>
         <xs:element type="t:NonEmptyArrayOfFolderChangeDescriptionsType" name="Updates"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfFolderChangesType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:FolderChangeType" name="FolderChange"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="WellKnownResponseObjectType">
      <xs:complexContent>
         <xs:restriction base="t:ResponseObjectType">
            <xs:sequence>
               <xs:element type="t:ItemClassType" name="ItemClass" minOccurs="0"/>
               <xs:element type="t:SensitivityChoicesType" name="Sensitivity" minOccurs="0"/>
               <xs:element type="t:BodyType" name="Body" minOccurs="0"/>
               <xs:element type="t:NonEmptyArrayOfAttachmentsType" name="Attachments" minOccurs="0"/>
               <xs:element type="t:NonEmptyArrayOfInternetHeadersType" name="InternetMessageHeaders" minOccurs="0"/>
               <xs:element type="t:SingleRecipientType" name="Sender" minOccurs="0"/>
               <xs:element type="t:ArrayOfRecipientsType" name="ToRecipients" minOccurs="0"/>
               <xs:element type="t:ArrayOfRecipientsType" name="CcRecipients" minOccurs="0"/>
               <xs:element type="t:ArrayOfRecipientsType" name="BccRecipients" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsReadReceiptRequested" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsDeliveryReceiptRequested" minOccurs="0"/>
               <xs:element type="t:SingleRecipientType" name="From" minOccurs="0"/>
               <xs:element type="t:ItemIdType" name="ReferenceItemId" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute use="prohibited" type="xs:string" name="ObjectName"/>
         </xs:restriction>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="SmartResponseBaseType">
      <xs:complexContent>
         <xs:restriction base="t:ResponseObjectType">
            <xs:sequence>
               <xs:element type="xs:string" name="Subject" minOccurs="0"/>
               <xs:element type="t:BodyType" name="Body" minOccurs="0"/>
               <xs:element type="t:ArrayOfRecipientsType" name="ToRecipients" minOccurs="0"/>
               <xs:element type="t:ArrayOfRecipientsType" name="CcRecipients" minOccurs="0"/>
               <xs:element type="t:ArrayOfRecipientsType" name="BccRecipients" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsReadReceiptRequested" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsDeliveryReceiptRequested" minOccurs="0"/>
               <xs:element type="t:SingleRecipientType" name="From" minOccurs="0"/>
               <xs:element type="t:ItemIdType" name="ReferenceItemId" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute use="prohibited" type="xs:string" name="ObjectName"/>
         </xs:restriction>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="SmartResponseType">
      <xs:complexContent>
         <xs:extension base="t:SmartResponseBaseType">
            <xs:sequence>
               <xs:element type="t:BodyType" name="NewBodyContent" minOccurs="0"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ReplyToItemType">
      <xs:complexContent>
         <xs:extension base="t:SmartResponseType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ReplyAllToItemType">
      <xs:complexContent>
         <xs:extension base="t:SmartResponseType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ForwardItemType">
      <xs:complexContent>
         <xs:extension base="t:SmartResponseType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="CancelCalendarItemType">
      <xs:complexContent>
         <xs:extension base="t:SmartResponseType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ReferenceItemResponseType">
      <xs:complexContent>
         <xs:restriction base="t:ResponseObjectType">
            <xs:sequence>
               <xs:element type="t:ItemIdType" name="ReferenceItemId" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute use="prohibited" type="xs:string" name="ObjectName"/>
         </xs:restriction>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="SuppressReadReceiptType">
      <xs:complexContent>
         <xs:extension base="t:ReferenceItemResponseType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="FindItemParentType">
      <xs:choice>
         <xs:element type="t:ArrayOfRealItemsType" name="Items"/>
         <xs:element type="t:ArrayOfGroupedItemsType" name="Groups"/>
      </xs:choice>
      <xs:attributeGroup ref="t:FindResponsePagingAttributes"/>
   </xs:complexType>
   <xs:complexType name="ItemType">
      <xs:sequence>
         <xs:element type="t:MimeContentType" name="MimeContent" minOccurs="0"/>
         <xs:element type="t:ItemIdType" name="ItemId" minOccurs="0"/>
         <xs:element type="t:FolderIdType" name="ParentFolderId" minOccurs="0"/>
         <xs:element type="t:ItemClassType" name="ItemClass" minOccurs="0"/>
         <xs:element type="xs:string" name="Subject" minOccurs="0"/>
         <xs:element type="t:SensitivityChoicesType" name="Sensitivity" minOccurs="0"/>
         <xs:element type="t:BodyType" name="Body" minOccurs="0"/>
         <xs:element type="t:NonEmptyArrayOfAttachmentsType" name="Attachments" minOccurs="0"/>
         <xs:element type="xs:dateTime" name="DateTimeReceived" minOccurs="0"/>
         <xs:element type="xs:int" name="Size" minOccurs="0"/>
         <xs:element type="t:ArrayOfStringsType" name="Categories" minOccurs="0"/>
         <xs:element type="t:ImportanceChoicesType" name="Importance" minOccurs="0"/>
         <xs:element type="xs:string" name="InReplyTo" minOccurs="0"/>
         <xs:element type="xs:boolean" name="IsSubmitted" minOccurs="0"/>
         <xs:element type="xs:boolean" name="IsDraft" minOccurs="0"/>
         <xs:element type="xs:boolean" name="IsFromMe" minOccurs="0"/>
         <xs:element type="xs:boolean" name="IsResend" minOccurs="0"/>
         <xs:element type="xs:boolean" name="IsUnmodified" minOccurs="0"/>
         <xs:element type="t:NonEmptyArrayOfInternetHeadersType" name="InternetMessageHeaders" minOccurs="0"/>
         <xs:element type="xs:dateTime" name="DateTimeSent" minOccurs="0"/>
         <xs:element type="xs:dateTime" name="DateTimeCreated" minOccurs="0"/>
         <xs:element type="t:NonEmptyArrayOfResponseObjectsType" name="ResponseObjects" minOccurs="0"/>
         <xs:element type="xs:dateTime" name="ReminderDueBy" minOccurs="0"/>
         <xs:element type="xs:boolean" name="ReminderIsSet" minOccurs="0"/>
         <xs:element type="t:ReminderMinutesBeforeStartType" name="ReminderMinutesBeforeStart" minOccurs="0"/>
         <xs:element type="xs:string" name="DisplayCc" minOccurs="0"/>
         <xs:element type="xs:string" name="DisplayTo" minOccurs="0"/>
         <xs:element type="xs:boolean" name="HasAttachments" minOccurs="0"/>
         <xs:element maxOccurs="unbounded" type="t:ExtendedPropertyType" name="ExtendedProperty" minOccurs="0"/>
         <xs:element type="xs:language" name="Culture" minOccurs="0"/>
         <xs:element type="t:EffectiveRightsType" name="EffectiveRights" minOccurs="0"/>
         <xs:element type="xs:string" name="LastModifiedName" minOccurs="0"/>
         <xs:element type="xs:dateTime" name="LastModifiedTime" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ArrayOfStringsType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="xs:string" name="String" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ArrayOfRealItemsType">
      <xs:sequence>
         <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element type="t:ItemType" name="Item"/>
            <xs:element type="t:MessageType" name="Message"/>
            <xs:element type="t:CalendarItemType" name="CalendarItem"/>
            <xs:element type="t:ContactItemType" name="Contact"/>
            <xs:element type="t:DistributionListType" name="DistributionList"/>
            <xs:element type="t:MeetingMessageType" name="MeetingMessage"/>
            <xs:element type="t:MeetingRequestMessageType" name="MeetingRequest"/>
            <xs:element type="t:MeetingResponseMessageType" name="MeetingResponse"/>
            <xs:element type="t:MeetingCancellationMessageType" name="MeetingCancellation"/>
            <xs:element type="t:TaskType" name="Task"/>
            <xs:element type="t:PostItemType" name="PostItem"/>
         </xs:choice>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfAllItemsType">
      <xs:sequence>
         <xs:choice maxOccurs="unbounded" minOccurs="1">
            <xs:element type="t:ItemType" name="Item"/>
            <xs:element type="t:MessageType" name="Message"/>
            <xs:element type="t:CalendarItemType" name="CalendarItem"/>
            <xs:element type="t:ContactItemType" name="Contact"/>
            <xs:element type="t:DistributionListType" name="DistributionList"/>
            <xs:element type="t:MeetingMessageType" name="MeetingMessage"/>
            <xs:element type="t:MeetingRequestMessageType" name="MeetingRequest"/>
            <xs:element type="t:MeetingResponseMessageType" name="MeetingResponse"/>
            <xs:element type="t:MeetingCancellationMessageType" name="MeetingCancellation"/>
            <xs:element type="t:TaskType" name="Task"/>
            <xs:element type="t:PostItemType" name="PostItem"/>
            <xs:element type="t:ReplyToItemType" name="ReplyToItem"/>
            <xs:element type="t:ForwardItemType" name="ForwardItem"/>
            <xs:element type="t:ReplyAllToItemType" name="ReplyAllToItem"/>
            <xs:element type="t:AcceptItemType" name="AcceptItem"/>
            <xs:element type="t:TentativelyAcceptItemType" name="TentativelyAcceptItem"/>
            <xs:element type="t:DeclineItemType" name="DeclineItem"/>
            <xs:element type="t:CancelCalendarItemType" name="CancelCalendarItem"/>
            <xs:element type="t:RemoveItemType" name="RemoveItem"/>
            <xs:element type="t:SuppressReadReceiptType" name="SuppressReadReceipt"/>
            <xs:element type="t:PostReplyItemType" name="PostReplyItem"/>
         </xs:choice>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="AcceptItemType">
      <xs:complexContent>
         <xs:extension base="t:WellKnownResponseObjectType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="TentativelyAcceptItemType">
      <xs:complexContent>
         <xs:extension base="t:WellKnownResponseObjectType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="DeclineItemType">
      <xs:complexContent>
         <xs:extension base="t:WellKnownResponseObjectType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="RemoveItemType">
      <xs:complexContent>
         <xs:extension base="t:ResponseObjectType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="PostReplyItemBaseType">
      <xs:complexContent>
         <xs:restriction base="t:ResponseObjectType">
            <xs:sequence>
               <xs:element type="xs:string" name="Subject" minOccurs="0"/>
               <xs:element type="t:BodyType" name="Body" minOccurs="0"/>
               <xs:element type="t:ItemIdType" name="ReferenceItemId" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute use="prohibited" type="xs:string" name="ObjectName"/>
         </xs:restriction>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="PostReplyItemType">
      <xs:complexContent>
         <xs:extension base="t:PostReplyItemBaseType">
            <xs:sequence>
               <xs:element type="t:BodyType" name="NewBodyContent" minOccurs="0"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="MimeContentType">
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attribute use="optional" type="xs:string" name="CharacterSet"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:simpleType name="MessageDispositionType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="SaveOnly"/>
         <xs:enumeration value="SendOnly"/>
         <xs:enumeration value="SendAndSaveCopy"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="CalendarItemCreateOrDeleteOperationType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="SendToNone"/>
         <xs:enumeration value="SendOnlyToAll"/>
         <xs:enumeration value="SendToAllAndSaveCopy"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="CalendarItemUpdateOperationType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="SendToNone"/>
         <xs:enumeration value="SendOnlyToAll"/>
         <xs:enumeration value="SendOnlyToChanged"/>
         <xs:enumeration value="SendToAllAndSaveCopy"/>
         <xs:enumeration value="SendToChangedAndSaveCopy"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="AffectedTaskOccurrencesType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="AllOccurrences"/>
         <xs:enumeration value="SpecifiedOccurrenceOnly"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="MessageType">
      <xs:complexContent>
         <xs:extension base="t:ItemType">
            <xs:sequence>
               <xs:element type="t:SingleRecipientType" name="Sender" minOccurs="0"/>
               <xs:element type="t:ArrayOfRecipientsType" name="ToRecipients" minOccurs="0"/>
               <xs:element type="t:ArrayOfRecipientsType" name="CcRecipients" minOccurs="0"/>
               <xs:element type="t:ArrayOfRecipientsType" name="BccRecipients" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsReadReceiptRequested" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsDeliveryReceiptRequested" minOccurs="0"/>
               <xs:element type="xs:base64Binary" name="ConversationIndex" minOccurs="0"/>
               <xs:element type="xs:string" name="ConversationTopic" minOccurs="0"/>
               <xs:element type="t:SingleRecipientType" name="From" minOccurs="0"/>
               <xs:element type="xs:string" name="InternetMessageId" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsRead" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsResponseRequested" minOccurs="0"/>
               <xs:element type="xs:string" name="References" minOccurs="0"/>
               <xs:element type="t:ArrayOfRecipientsType" name="ReplyTo" minOccurs="0"/>
               <xs:element type="t:SingleRecipientType" name="ReceivedBy" minOccurs="0"/>
               <xs:element type="t:SingleRecipientType" name="ReceivedRepresenting" minOccurs="0"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:simpleType name="TaskStatusType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="NotStarted"/>
         <xs:enumeration value="InProgress"/>
         <xs:enumeration value="Completed"/>
         <xs:enumeration value="WaitingOnOthers"/>
         <xs:enumeration value="Deferred"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="TaskDelegateStateType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="NoMatch"/>
         <xs:enumeration value="OwnNew"/>
         <xs:enumeration value="Owned"/>
         <xs:enumeration value="Accepted"/>
         <xs:enumeration value="Declined"/>
         <xs:enumeration value="Max"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="TaskType">
      <xs:complexContent>
         <xs:extension base="t:ItemType">
            <xs:sequence>
               <xs:element type="xs:int" name="ActualWork" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="AssignedTime" minOccurs="0"/>
               <xs:element type="xs:string" name="BillingInformation" minOccurs="0"/>
               <xs:element type="xs:int" name="ChangeCount" minOccurs="0"/>
               <xs:element type="t:ArrayOfStringsType" name="Companies" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="CompleteDate" minOccurs="0"/>
               <xs:element type="t:ArrayOfStringsType" name="Contacts" minOccurs="0"/>
               <xs:element type="t:TaskDelegateStateType" name="DelegationState" minOccurs="0"/>
               <xs:element type="xs:string" name="Delegator" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="DueDate" minOccurs="0"/>
               <xs:element type="xs:int" name="IsAssignmentEditable" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsComplete" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsRecurring" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsTeamTask" minOccurs="0"/>
               <xs:element type="xs:string" name="Mileage" minOccurs="0"/>
               <xs:element type="xs:string" name="Owner" minOccurs="0"/>
               <xs:element type="xs:double" name="PercentComplete" minOccurs="0"/>
               <xs:element type="t:TaskRecurrenceType" name="Recurrence" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="StartDate" minOccurs="0"/>
               <xs:element type="t:TaskStatusType" name="Status" minOccurs="0"/>
               <xs:element type="xs:string" name="StatusDescription" minOccurs="0"/>
               <xs:element type="xs:int" name="TotalWork" minOccurs="0"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="PostItemType">
      <xs:complexContent>
         <xs:extension base="t:ItemType">
            <xs:sequence>
               <xs:element type="xs:base64Binary" name="ConversationIndex" minOccurs="0"/>
               <xs:element type="xs:string" name="ConversationTopic" minOccurs="0"/>
               <xs:element type="t:SingleRecipientType" name="From" minOccurs="0"/>
               <xs:element type="xs:string" name="InternetMessageId" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsRead" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="PostedTime" minOccurs="0"/>
               <xs:element type="xs:string" name="References" minOccurs="0"/>
               <xs:element type="t:SingleRecipientType" name="Sender" minOccurs="0"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType abstract="true" name="BasePagingType">
      <xs:attribute use="optional" type="xs:int" name="MaxEntriesReturned"/>
   </xs:complexType>
   <xs:simpleType name="IndexBasePointType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="Beginning"/>
         <xs:enumeration value="End"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="IndexedPageViewType">
      <xs:complexContent>
         <xs:extension base="t:BasePagingType">
            <xs:attribute use="required" type="xs:int" name="Offset"/>
            <xs:attribute use="required" type="t:IndexBasePointType" name="BasePoint"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="FractionalPageViewType">
      <xs:complexContent>
         <xs:extension base="t:BasePagingType">
            <xs:attribute use="required" type="xs:int" name="Numerator"/>
            <xs:attribute use="required" type="xs:int" name="Denominator"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="CalendarViewType">
      <xs:complexContent>
         <xs:extension base="t:BasePagingType">
            <xs:attribute use="required" type="xs:dateTime" name="StartDate"/>
            <xs:attribute use="required" type="xs:dateTime" name="EndDate"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ContactsViewType">
      <xs:complexContent>
         <xs:extension base="t:BasePagingType">
            <xs:attribute use="optional" type="xs:string" name="InitialName"/>
            <xs:attribute use="optional" type="xs:string" name="FinalName"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:simpleType name="ResolveNamesSearchScopeType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="ActiveDirectory"/>
         <xs:enumeration value="ActiveDirectoryContacts"/>
         <xs:enumeration value="Contacts"/>
         <xs:enumeration value="ContactsActiveDirectory"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="ResolutionType">
      <xs:sequence>
         <xs:element type="t:EmailAddressType" name="Mailbox"/>
         <xs:element type="t:ContactItemType" name="Contact" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ArrayOfResolutionType">
      <xs:sequence>
         <xs:element maxOccurs="100" type="t:ResolutionType" name="Resolution" minOccurs="0"/>
      </xs:sequence>
      <xs:attributeGroup ref="t:FindResponsePagingAttributes"/>
   </xs:complexType>
   <xs:complexType name="ArrayOfDLExpansionType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:EmailAddressType" name="Mailbox" minOccurs="0"/>
      </xs:sequence>
      <xs:attributeGroup ref="t:FindResponsePagingAttributes"/>
   </xs:complexType>
   <xs:simpleType name="MeetingRequestTypeType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="None"/>
         <xs:enumeration value="FullUpdate"/>
         <xs:enumeration value="InformationalUpdate"/>
         <xs:enumeration value="NewMeetingRequest"/>
         <xs:enumeration value="Outdated"/>
         <xs:enumeration value="SilentUpdate"/>
         <xs:enumeration value="PrincipalWantsCopy"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="ReminderMinutesBeforeStartType">
      <xs:union>
         <xs:simpleType id="ReminderMinutesBeforeStartType">
            <xs:restriction base="xs:int">
               <xs:minInclusive value="0"/>
               <xs:maxInclusive value="2629800"/>
            </xs:restriction>
         </xs:simpleType>
         <xs:simpleType id="ReminderMinutesBeforeStartMarkerType">
            <xs:restriction base="xs:int">
               <xs:minInclusive value="1525252321"/>
               <xs:maxInclusive value="1525252321"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:union>
   </xs:simpleType>
   <xs:simpleType name="LegacyFreeBusyType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="Free"/>
         <xs:enumeration value="Tentative"/>
         <xs:enumeration value="Busy"/>
         <xs:enumeration value="OOF"/>
         <xs:enumeration value="NoData"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="CalendarItemTypeType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="Single"/>
         <xs:enumeration value="Occurrence"/>
         <xs:enumeration value="Exception"/>
         <xs:enumeration value="RecurringMaster"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="ResponseTypeType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="Unknown"/>
         <xs:enumeration value="Organizer"/>
         <xs:enumeration value="Tentative"/>
         <xs:enumeration value="Accept"/>
         <xs:enumeration value="Decline"/>
         <xs:enumeration value="NoResponseReceived"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="AttendeeType">
      <xs:sequence>
         <xs:element type="t:EmailAddressType" name="Mailbox"/>
         <xs:element type="t:ResponseTypeType" name="ResponseType" minOccurs="0"/>
         <xs:element type="xs:dateTime" name="LastResponseTime" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfAttendeesType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:AttendeeType" name="Attendee"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="OccurrenceItemIdType">
      <xs:complexContent>
         <xs:extension base="t:BaseItemIdType">
            <xs:attribute use="required" type="t:DerivedItemIdType" name="RecurringMasterId"/>
            <xs:attribute use="optional" type="xs:string" name="ChangeKey"/>
            <xs:attribute use="required" type="xs:int" name="InstanceIndex"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="RecurringMasterItemIdType">
      <xs:complexContent>
         <xs:extension base="t:BaseItemIdType">
            <xs:attribute use="required" type="t:DerivedItemIdType" name="OccurrenceId"/>
            <xs:attribute use="optional" type="xs:string" name="ChangeKey"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:simpleType name="DayOfWeekType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="Sunday"/>
         <xs:enumeration value="Monday"/>
         <xs:enumeration value="Tuesday"/>
         <xs:enumeration value="Wednesday"/>
         <xs:enumeration value="Thursday"/>
         <xs:enumeration value="Friday"/>
         <xs:enumeration value="Saturday"/>
         <xs:enumeration value="Day"/>
         <xs:enumeration value="Weekday"/>
         <xs:enumeration value="WeekendDay"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="DaysOfWeekType">
      <xs:list itemType="t:DayOfWeekType"/>
   </xs:simpleType>
   <xs:simpleType name="DayOfWeekIndexType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="First"/>
         <xs:enumeration value="Second"/>
         <xs:enumeration value="Third"/>
         <xs:enumeration value="Fourth"/>
         <xs:enumeration value="Last"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="MonthNamesType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="January"/>
         <xs:enumeration value="February"/>
         <xs:enumeration value="March"/>
         <xs:enumeration value="April"/>
         <xs:enumeration value="May"/>
         <xs:enumeration value="June"/>
         <xs:enumeration value="July"/>
         <xs:enumeration value="August"/>
         <xs:enumeration value="September"/>
         <xs:enumeration value="October"/>
         <xs:enumeration value="November"/>
         <xs:enumeration value="December"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType abstract="true" name="RecurrencePatternBaseType"/>
   <xs:complexType abstract="true" name="IntervalRecurrencePatternBaseType">
      <xs:complexContent>
         <xs:extension base="t:RecurrencePatternBaseType">
            <xs:sequence>
               <xs:element type="xs:int" name="Interval"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType abstract="true" name="RegeneratingPatternBaseType">
      <xs:complexContent>
         <xs:extension base="t:IntervalRecurrencePatternBaseType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="DailyRegeneratingPatternType">
      <xs:complexContent>
         <xs:extension base="t:RegeneratingPatternBaseType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="WeeklyRegeneratingPatternType">
      <xs:complexContent>
         <xs:extension base="t:RegeneratingPatternBaseType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="MonthlyRegeneratingPatternType">
      <xs:complexContent>
         <xs:extension base="t:RegeneratingPatternBaseType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="YearlyRegeneratingPatternType">
      <xs:complexContent>
         <xs:extension base="t:RegeneratingPatternBaseType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="RelativeYearlyRecurrencePatternType">
      <xs:complexContent>
         <xs:extension base="t:RecurrencePatternBaseType">
            <xs:sequence>
               <xs:element type="t:DayOfWeekType" name="DaysOfWeek"/>
               <xs:element type="t:DayOfWeekIndexType" name="DayOfWeekIndex"/>
               <xs:element type="t:MonthNamesType" name="Month"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="AbsoluteYearlyRecurrencePatternType">
      <xs:complexContent>
         <xs:extension base="t:RecurrencePatternBaseType">
            <xs:sequence>
               <xs:element type="xs:int" name="DayOfMonth"/>
               <xs:element type="t:MonthNamesType" name="Month"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="RelativeMonthlyRecurrencePatternType">
      <xs:complexContent>
         <xs:extension base="t:IntervalRecurrencePatternBaseType">
            <xs:sequence>
               <xs:element type="t:DayOfWeekType" name="DaysOfWeek"/>
               <xs:element type="t:DayOfWeekIndexType" name="DayOfWeekIndex"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="AbsoluteMonthlyRecurrencePatternType">
      <xs:complexContent>
         <xs:extension base="t:IntervalRecurrencePatternBaseType">
            <xs:sequence>
               <xs:element type="xs:int" name="DayOfMonth"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="WeeklyRecurrencePatternType">
      <xs:complexContent>
         <xs:extension base="t:IntervalRecurrencePatternBaseType">
            <xs:sequence>
               <xs:element type="t:DaysOfWeekType" name="DaysOfWeek"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="DailyRecurrencePatternType">
      <xs:complexContent>
         <xs:extension base="t:IntervalRecurrencePatternBaseType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:group name="TimeChangePatternTypes">
      <xs:sequence>
         <xs:choice>
            <xs:element type="t:RelativeYearlyRecurrencePatternType" name="RelativeYearlyRecurrence"/>
            <xs:element type="xs:date" name="AbsoluteDate"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:complexType name="TimeChangeType">
      <xs:sequence>
         <xs:element type="xs:duration" name="Offset"/>
         <xs:group ref="t:TimeChangePatternTypes" minOccurs="0"/>
         <xs:element type="xs:time" name="Time"/>
      </xs:sequence>
      <xs:attribute use="optional" type="xs:string" name="TimeZoneName"/>
   </xs:complexType>
   <xs:complexType name="TimeZoneType">
      <xs:sequence minOccurs="0">
         <xs:element type="xs:duration" name="BaseOffset"/>
         <xs:sequence minOccurs="0">
            <xs:element type="t:TimeChangeType" name="Standard"/>
            <xs:element type="t:TimeChangeType" name="Daylight"/>
         </xs:sequence>
      </xs:sequence>
      <xs:attribute use="optional" type="xs:string" name="TimeZoneName"/>
   </xs:complexType>
   <xs:complexType abstract="true" name="RecurrenceRangeBaseType">
      <xs:sequence>
         <xs:element type="xs:date" name="StartDate"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="NoEndRecurrenceRangeType">
      <xs:complexContent>
         <xs:extension base="t:RecurrenceRangeBaseType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="EndDateRecurrenceRangeType">
      <xs:complexContent>
         <xs:extension base="t:RecurrenceRangeBaseType">
            <xs:sequence>
               <xs:element type="xs:date" name="EndDate"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="NumberedRecurrenceRangeType">
      <xs:complexContent>
         <xs:extension base="t:RecurrenceRangeBaseType">
            <xs:sequence>
               <xs:element type="xs:int" name="NumberOfOccurrences"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:group name="RecurrencePatternTypes">
      <xs:sequence>
         <xs:choice>
            <xs:element type="t:RelativeYearlyRecurrencePatternType" name="RelativeYearlyRecurrence"/>
            <xs:element type="t:AbsoluteYearlyRecurrencePatternType" name="AbsoluteYearlyRecurrence"/>
            <xs:element type="t:RelativeMonthlyRecurrencePatternType" name="RelativeMonthlyRecurrence"/>
            <xs:element type="t:AbsoluteMonthlyRecurrencePatternType" name="AbsoluteMonthlyRecurrence"/>
            <xs:element type="t:WeeklyRecurrencePatternType" name="WeeklyRecurrence"/>
            <xs:element type="t:DailyRecurrencePatternType" name="DailyRecurrence"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:group name="TaskRecurrencePatternTypes">
      <xs:sequence>
         <xs:choice>
            <xs:element type="t:RelativeYearlyRecurrencePatternType" name="RelativeYearlyRecurrence"/>
            <xs:element type="t:AbsoluteYearlyRecurrencePatternType" name="AbsoluteYearlyRecurrence"/>
            <xs:element type="t:RelativeMonthlyRecurrencePatternType" name="RelativeMonthlyRecurrence"/>
            <xs:element type="t:AbsoluteMonthlyRecurrencePatternType" name="AbsoluteMonthlyRecurrence"/>
            <xs:element type="t:WeeklyRecurrencePatternType" name="WeeklyRecurrence"/>
            <xs:element type="t:DailyRecurrencePatternType" name="DailyRecurrence"/>
            <xs:element type="t:DailyRegeneratingPatternType" name="DailyRegeneration"/>
            <xs:element type="t:WeeklyRegeneratingPatternType" name="WeeklyRegeneration"/>
            <xs:element type="t:MonthlyRegeneratingPatternType" name="MonthlyRegeneration"/>
            <xs:element type="t:YearlyRegeneratingPatternType" name="YearlyRegeneration"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:group name="RecurrenceRangeTypes">
      <xs:sequence>
         <xs:choice>
            <xs:element type="t:NoEndRecurrenceRangeType" name="NoEndRecurrence"/>
            <xs:element type="t:EndDateRecurrenceRangeType" name="EndDateRecurrence"/>
            <xs:element type="t:NumberedRecurrenceRangeType" name="NumberedRecurrence"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:complexType name="RecurrenceType">
      <xs:sequence>
         <xs:group ref="t:RecurrencePatternTypes"/>
         <xs:group ref="t:RecurrenceRangeTypes"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="TaskRecurrenceType">
      <xs:sequence>
         <xs:group ref="t:TaskRecurrencePatternTypes"/>
         <xs:group ref="t:RecurrenceRangeTypes"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="OccurrenceInfoType">
      <xs:sequence>
         <xs:element type="t:ItemIdType" name="ItemId"/>
         <xs:element type="xs:dateTime" name="Start"/>
         <xs:element type="xs:dateTime" name="End"/>
         <xs:element type="xs:dateTime" name="OriginalStart"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfOccurrenceInfoType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:OccurrenceInfoType" name="Occurrence"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="DeletedOccurrenceInfoType">
      <xs:sequence>
         <xs:element type="xs:dateTime" name="Start"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfDeletedOccurrencesType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:DeletedOccurrenceInfoType" name="DeletedOccurrence"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="CalendarItemType">
      <xs:complexContent>
         <xs:extension base="t:ItemType">
            <xs:sequence>
               <xs:element type="xs:string" name="UID" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="RecurrenceId" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="DateTimeStamp" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="Start" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="End" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="OriginalStart" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsAllDayEvent" minOccurs="0"/>
               <xs:element type="t:LegacyFreeBusyType" name="LegacyFreeBusyStatus" minOccurs="0"/>
               <xs:element type="xs:string" name="Location" minOccurs="0"/>
               <xs:element type="xs:string" name="When" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsMeeting" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsCancelled" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsRecurring" minOccurs="0"/>
               <xs:element type="xs:boolean" name="MeetingRequestWasSent" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsResponseRequested" minOccurs="0"/>
               <xs:element type="t:CalendarItemTypeType" name="CalendarItemType" minOccurs="0"/>
               <xs:element type="t:ResponseTypeType" name="MyResponseType" minOccurs="0"/>
               <xs:element type="t:SingleRecipientType" name="Organizer" minOccurs="0"/>
               <xs:element type="t:NonEmptyArrayOfAttendeesType" name="RequiredAttendees" minOccurs="0"/>
               <xs:element type="t:NonEmptyArrayOfAttendeesType" name="OptionalAttendees" minOccurs="0"/>
               <xs:element type="t:NonEmptyArrayOfAttendeesType" name="Resources" minOccurs="0"/>
               <xs:element type="xs:int" name="ConflictingMeetingCount" minOccurs="0"/>
               <xs:element type="xs:int" name="AdjacentMeetingCount" minOccurs="0"/>
               <xs:element type="t:NonEmptyArrayOfAllItemsType" name="ConflictingMeetings" minOccurs="0"/>
               <xs:element type="t:NonEmptyArrayOfAllItemsType" name="AdjacentMeetings" minOccurs="0"/>
               <xs:element type="xs:string" name="Duration" minOccurs="0"/>
               <xs:element type="xs:string" name="TimeZone" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="AppointmentReplyTime" minOccurs="0"/>
               <xs:element type="xs:int" name="AppointmentSequenceNumber" minOccurs="0"/>
               <xs:element type="xs:int" name="AppointmentState" minOccurs="0"/>
               <xs:element type="t:RecurrenceType" name="Recurrence" minOccurs="0"/>
               <xs:element type="t:OccurrenceInfoType" name="FirstOccurrence" minOccurs="0"/>
               <xs:element type="t:OccurrenceInfoType" name="LastOccurrence" minOccurs="0"/>
               <xs:element type="t:NonEmptyArrayOfOccurrenceInfoType" name="ModifiedOccurrences" minOccurs="0"/>
               <xs:element type="t:NonEmptyArrayOfDeletedOccurrencesType" name="DeletedOccurrences" minOccurs="0"/>
               <xs:element type="t:TimeZoneType" name="MeetingTimeZone" minOccurs="0"/>
               <xs:element type="xs:int" name="ConferenceType" minOccurs="0"/>
               <xs:element type="xs:boolean" name="AllowNewTimeProposal" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsOnlineMeeting" minOccurs="0"/>
               <xs:element type="xs:string" name="MeetingWorkspaceUrl" minOccurs="0"/>
               <xs:element type="xs:string" name="NetShowUrl" minOccurs="0"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="MeetingMessageType">
      <xs:complexContent>
         <xs:extension base="t:MessageType">
            <xs:sequence>
               <xs:element type="t:ItemIdType" name="AssociatedCalendarItemId" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsDelegated" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsOutOfDate" minOccurs="0"/>
               <xs:element type="xs:boolean" name="HasBeenProcessed" minOccurs="0"/>
               <xs:element type="t:ResponseTypeType" name="ResponseType" minOccurs="0"/>
               <xs:element type="xs:string" name="UID" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="RecurrenceId" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="DateTimeStamp" minOccurs="0"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="MeetingRequestMessageType">
      <xs:complexContent>
         <xs:extension base="t:MeetingMessageType">
            <xs:sequence>
               <xs:element type="t:MeetingRequestTypeType" name="MeetingRequestType" minOccurs="0"/>
               <xs:element type="t:LegacyFreeBusyType" name="IntendedFreeBusyStatus" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="Start" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="End" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="OriginalStart" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsAllDayEvent" minOccurs="0"/>
               <xs:element type="t:LegacyFreeBusyType" name="LegacyFreeBusyStatus" minOccurs="0"/>
               <xs:element type="xs:string" name="Location" minOccurs="0"/>
               <xs:element type="xs:string" name="When" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsMeeting" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsCancelled" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsRecurring" minOccurs="0"/>
               <xs:element type="xs:boolean" name="MeetingRequestWasSent" minOccurs="0"/>
               <xs:element type="t:CalendarItemTypeType" name="CalendarItemType" minOccurs="0"/>
               <xs:element type="t:ResponseTypeType" name="MyResponseType" minOccurs="0"/>
               <xs:element type="t:SingleRecipientType" name="Organizer" minOccurs="0"/>
               <xs:element type="t:NonEmptyArrayOfAttendeesType" name="RequiredAttendees" minOccurs="0"/>
               <xs:element type="t:NonEmptyArrayOfAttendeesType" name="OptionalAttendees" minOccurs="0"/>
               <xs:element type="t:NonEmptyArrayOfAttendeesType" name="Resources" minOccurs="0"/>
               <xs:element type="xs:int" name="ConflictingMeetingCount" minOccurs="0"/>
               <xs:element type="xs:int" name="AdjacentMeetingCount" minOccurs="0"/>
               <xs:element type="t:NonEmptyArrayOfAllItemsType" name="ConflictingMeetings" minOccurs="0"/>
               <xs:element type="t:NonEmptyArrayOfAllItemsType" name="AdjacentMeetings" minOccurs="0"/>
               <xs:element type="xs:string" name="Duration" minOccurs="0"/>
               <xs:element type="xs:string" name="TimeZone" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="AppointmentReplyTime" minOccurs="0"/>
               <xs:element type="xs:int" name="AppointmentSequenceNumber" minOccurs="0"/>
               <xs:element type="xs:int" name="AppointmentState" minOccurs="0"/>
               <xs:element type="t:RecurrenceType" name="Recurrence" minOccurs="0"/>
               <xs:element type="t:OccurrenceInfoType" name="FirstOccurrence" minOccurs="0"/>
               <xs:element type="t:OccurrenceInfoType" name="LastOccurrence" minOccurs="0"/>
               <xs:element type="t:NonEmptyArrayOfOccurrenceInfoType" name="ModifiedOccurrences" minOccurs="0"/>
               <xs:element type="t:NonEmptyArrayOfDeletedOccurrencesType" name="DeletedOccurrences" minOccurs="0"/>
               <xs:element type="t:TimeZoneType" name="MeetingTimeZone" minOccurs="0"/>
               <xs:element type="xs:int" name="ConferenceType" minOccurs="0"/>
               <xs:element type="xs:boolean" name="AllowNewTimeProposal" minOccurs="0"/>
               <xs:element type="xs:boolean" name="IsOnlineMeeting" minOccurs="0"/>
               <xs:element type="xs:string" name="MeetingWorkspaceUrl" minOccurs="0"/>
               <xs:element type="xs:string" name="NetShowUrl" minOccurs="0"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="MeetingResponseMessageType">
      <xs:complexContent>
         <xs:extension base="t:MeetingMessageType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="MeetingCancellationMessageType">
      <xs:complexContent>
         <xs:extension base="t:MeetingMessageType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:simpleType name="ImAddressKeyType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="ImAddress1"/>
         <xs:enumeration value="ImAddress2"/>
         <xs:enumeration value="ImAddress3"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="EmailAddressKeyType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="EmailAddress1"/>
         <xs:enumeration value="EmailAddress2"/>
         <xs:enumeration value="EmailAddress3"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="PhoneNumberKeyType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="AssistantPhone"/>
         <xs:enumeration value="BusinessFax"/>
         <xs:enumeration value="BusinessPhone"/>
         <xs:enumeration value="BusinessPhone2"/>
         <xs:enumeration value="Callback"/>
         <xs:enumeration value="CarPhone"/>
         <xs:enumeration value="CompanyMainPhone"/>
         <xs:enumeration value="HomeFax"/>
         <xs:enumeration value="HomePhone"/>
         <xs:enumeration value="HomePhone2"/>
         <xs:enumeration value="Isdn"/>
         <xs:enumeration value="MobilePhone"/>
         <xs:enumeration value="OtherFax"/>
         <xs:enumeration value="OtherTelephone"/>
         <xs:enumeration value="Pager"/>
         <xs:enumeration value="PrimaryPhone"/>
         <xs:enumeration value="RadioPhone"/>
         <xs:enumeration value="Telex"/>
         <xs:enumeration value="TtyTddPhone"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="PhysicalAddressIndexType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="None"/>
         <xs:enumeration value="Business"/>
         <xs:enumeration value="Home"/>
         <xs:enumeration value="Other"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="PhysicalAddressKeyType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="Business"/>
         <xs:enumeration value="Home"/>
         <xs:enumeration value="Other"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="FileAsMappingType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="None"/>
         <xs:enumeration value="LastCommaFirst"/>
         <xs:enumeration value="FirstSpaceLast"/>
         <xs:enumeration value="Company"/>
         <xs:enumeration value="LastCommaFirstCompany"/>
         <xs:enumeration value="CompanyLastFirst"/>
         <xs:enumeration value="LastFirst"/>
         <xs:enumeration value="LastFirstCompany"/>
         <xs:enumeration value="CompanyLastCommaFirst"/>
         <xs:enumeration value="LastFirstSuffix"/>
         <xs:enumeration value="LastSpaceFirstCompany"/>
         <xs:enumeration value="CompanyLastSpaceFirst"/>
         <xs:enumeration value="LastSpaceFirst"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="ContactSourceType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="ActiveDirectory"/>
         <xs:enumeration value="Store"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="CompleteNameType">
      <xs:sequence>
         <xs:element type="xs:string" name="Title" minOccurs="0"/>
         <xs:element type="xs:string" name="FirstName" minOccurs="0"/>
         <xs:element type="xs:string" name="MiddleName" minOccurs="0"/>
         <xs:element type="xs:string" name="LastName" minOccurs="0"/>
         <xs:element type="xs:string" name="Suffix" minOccurs="0"/>
         <xs:element type="xs:string" name="Initials" minOccurs="0"/>
         <xs:element type="xs:string" name="FullName" minOccurs="0"/>
         <xs:element type="xs:string" name="Nickname" minOccurs="0"/>
         <xs:element type="xs:string" name="YomiFirstName" minOccurs="0"/>
         <xs:element type="xs:string" name="YomiLastName" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ImAddressDictionaryEntryType">
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attribute use="required" type="t:ImAddressKeyType" name="Key"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="EmailAddressDictionaryEntryType">
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attribute use="required" type="t:EmailAddressKeyType" name="Key"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="PhoneNumberDictionaryEntryType">
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attribute use="required" type="t:PhoneNumberKeyType" name="Key"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="PhysicalAddressDictionaryEntryType">
      <xs:sequence>
         <xs:element type="xs:string" name="Street" minOccurs="0"/>
         <xs:element type="xs:string" name="City" minOccurs="0"/>
         <xs:element type="xs:string" name="State" minOccurs="0"/>
         <xs:element type="xs:string" name="CountryOrRegion" minOccurs="0"/>
         <xs:element type="xs:string" name="PostalCode" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute use="required" type="t:PhysicalAddressKeyType" name="Key"/>
   </xs:complexType>
   <xs:complexType name="ImAddressDictionaryType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:ImAddressDictionaryEntryType" name="Entry"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="EmailAddressDictionaryType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:EmailAddressDictionaryEntryType" name="Entry"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="PhoneNumberDictionaryType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:PhoneNumberDictionaryEntryType" name="Entry"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="PhysicalAddressDictionaryType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:PhysicalAddressDictionaryEntryType" name="Entry"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ContactItemType">
      <xs:complexContent>
         <xs:extension base="t:ItemType">
            <xs:sequence>
               <xs:element type="xs:string" name="FileAs" minOccurs="0"/>
               <xs:element type="t:FileAsMappingType" name="FileAsMapping" minOccurs="0"/>
               <xs:element type="xs:string" name="DisplayName" minOccurs="0"/>
               <xs:element type="xs:string" name="GivenName" minOccurs="0"/>
               <xs:element type="xs:string" name="Initials" minOccurs="0"/>
               <xs:element type="xs:string" name="MiddleName" minOccurs="0"/>
               <xs:element type="xs:string" name="Nickname" minOccurs="0"/>
               <xs:element type="t:CompleteNameType" name="CompleteName" minOccurs="0"/>
               <xs:element type="xs:string" name="CompanyName" minOccurs="0"/>
               <xs:element type="t:EmailAddressDictionaryType" name="EmailAddresses" minOccurs="0"/>
               <xs:element type="t:PhysicalAddressDictionaryType" name="PhysicalAddresses" minOccurs="0"/>
               <xs:element type="t:PhoneNumberDictionaryType" name="PhoneNumbers" minOccurs="0"/>
               <xs:element type="xs:string" name="AssistantName" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="Birthday" minOccurs="0"/>
               <xs:element type="xs:anyURI" name="BusinessHomePage" minOccurs="0"/>
               <xs:element type="t:ArrayOfStringsType" name="Children" minOccurs="0"/>
               <xs:element type="t:ArrayOfStringsType" name="Companies" minOccurs="0"/>
               <xs:element type="t:ContactSourceType" name="ContactSource" minOccurs="0"/>
               <xs:element type="xs:string" name="Department" minOccurs="0"/>
               <xs:element type="xs:string" name="Generation" minOccurs="0"/>
               <xs:element type="t:ImAddressDictionaryType" name="ImAddresses" minOccurs="0"/>
               <xs:element type="xs:string" name="JobTitle" minOccurs="0"/>
               <xs:element type="xs:string" name="Manager" minOccurs="0"/>
               <xs:element type="xs:string" name="Mileage" minOccurs="0"/>
               <xs:element type="xs:string" name="OfficeLocation" minOccurs="0"/>
               <xs:element type="t:PhysicalAddressIndexType" name="PostalAddressIndex" minOccurs="0"/>
               <xs:element type="xs:string" name="Profession" minOccurs="0"/>
               <xs:element type="xs:string" name="SpouseName" minOccurs="0"/>
               <xs:element type="xs:string" name="Surname" minOccurs="0"/>
               <xs:element type="xs:dateTime" name="WeddingAnniversary" minOccurs="0"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="DistributionListType">
      <xs:complexContent>
         <xs:extension base="t:ItemType">
            <xs:sequence>
               <xs:element type="xs:string" name="DisplayName" minOccurs="0"/>
               <xs:element type="xs:string" name="FileAs" minOccurs="0"/>
               <xs:element type="t:ContactSourceType" name="ContactSource" minOccurs="0"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="SearchParametersType">
      <xs:sequence>
         <xs:element type="t:RestrictionType" name="Restriction"/>
         <xs:element type="t:NonEmptyArrayOfBaseFolderIdsType" name="BaseFolderIds"/>
      </xs:sequence>
      <xs:attribute use="optional" type="t:SearchFolderTraversalType" name="Traversal"/>
   </xs:complexType>
   <xs:complexType name="ConstantValueType">
      <xs:attribute use="required" type="xs:string" name="Value"/>
   </xs:complexType>
   <xs:complexType abstract="true" name="SearchExpressionType"/>
   <xs:element type="t:SearchExpressionType" name="SearchExpression"/>
   <xs:simpleType name="AggregateType">
      <xs:annotation>
         <xs:documentation>
        This max/min evaluation is applied to the field specified within the group by
        instance for EACH item within that group.  This determines which item from each group
        is to be selected as the representative for that group.
      </xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="Minimum"/>
         <xs:enumeration value="Maximum"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="AggregateOnType">
      <xs:annotation>
         <xs:documentation>
        Represents the field of each item to aggregate on and the qualifier to apply to that
        field in determining which item will represent the group.
      </xs:documentation>
      </xs:annotation>
      <xs:choice>
         <xs:element type="t:PathToUnindexedFieldType" name="FieldURI"/>
         <xs:element type="t:PathToIndexedFieldType" name="IndexedFieldURI"/>
         <xs:element type="t:PathToExtendedFieldType" name="ExtendedFieldURI"/>
      </xs:choice>
      <xs:attribute use="required" type="t:AggregateType" name="Aggregate"/>
   </xs:complexType>
   <xs:complexType abstract="true" name="BaseGroupByType">
      <xs:attribute use="required" type="t:SortDirectionType" name="Order"/>
   </xs:complexType>
   <xs:complexType name="GroupByType">
      <xs:annotation>
         <xs:documentation>
        Allows consumers to specify arbitrary groupings for FindItem queries.
      </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="t:BaseGroupByType">
            <xs:sequence>
               <xs:choice>
                  <xs:element type="t:PathToUnindexedFieldType" name="FieldURI"/>
                  <xs:element type="t:PathToIndexedFieldType" name="IndexedFieldURI"/>
                  <xs:element type="t:PathToExtendedFieldType" name="ExtendedFieldURI"/>
               </xs:choice>
               <xs:element type="t:AggregateOnType" name="AggregateOn"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:simpleType name="StandardGroupByType">
      <xs:annotation>
         <xs:documentation>
        Represents standard groupings for GroupBy queries.
      </xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="ConversationTopic"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="DistinguishedGroupByType">
      <xs:annotation>
         <xs:documentation>
        Allows consumers to access standard groupings for FindItem queries.  This is in
        contrast to the arbitrary (custom) groupings available via the t:GroupByType
      </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="t:BaseGroupByType">
            <xs:sequence>
               <xs:element type="t:StandardGroupByType" name="StandardGroupBy"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="GroupedItemsType">
      <xs:sequence>
         <xs:element type="xs:string" name="GroupIndex"/>
         <xs:element type="t:ArrayOfRealItemsType" name="Items"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ArrayOfGroupedItemsType">
      <xs:choice>
         <xs:element maxOccurs="unbounded" type="t:GroupedItemsType" name="GroupedItems" minOccurs="0"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="ExistsType">
      <xs:complexContent>
         <xs:extension base="t:SearchExpressionType">
            <xs:sequence>
               <xs:choice maxOccurs="unbounded">
                  <xs:element ref="t:FieldURI"/>
                  <xs:element ref="t:IndexedFieldURI"/>
                  <xs:element ref="t:ExtendedFieldURI"/>
               </xs:choice>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element substitutionGroup="t:SearchExpression" type="t:ExistsType" name="Exists"/>
   <xs:complexType name="FieldURIOrConstantType">
      <xs:choice>
         <xs:element ref="t:FieldURI"/>
         <xs:element ref="t:IndexedFieldURI"/>
         <xs:element ref="t:ExtendedFieldURI"/>
         <xs:element type="t:ConstantValueType" name="Constant"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType abstract="true" name="TwoOperandExpressionType">
      <xs:complexContent>
         <xs:extension base="t:SearchExpressionType">
            <xs:sequence>
               <xs:choice maxOccurs="unbounded">
                  <xs:element ref="t:FieldURI"/>
                  <xs:element ref="t:IndexedFieldURI"/>
                  <xs:element ref="t:ExtendedFieldURI"/>
               </xs:choice>
               <xs:element type="t:FieldURIOrConstantType" name="FieldURIOrConstant"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:simpleType name="ExcludesAttributeType">
      <xs:restriction base="xs:string">
         <xs:pattern value="((0x|0X)[0-9A-Fa-f]*)|([0-9]*)"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="ExcludesValueType">
      <xs:attribute use="required" type="t:ExcludesAttributeType" name="Value"/>
   </xs:complexType>
   <xs:complexType name="ExcludesType">
      <xs:complexContent>
         <xs:extension base="t:SearchExpressionType">
            <xs:sequence>
               <xs:choice maxOccurs="unbounded">
                  <xs:element ref="t:FieldURI"/>
                  <xs:element ref="t:IndexedFieldURI"/>
                  <xs:element ref="t:ExtendedFieldURI"/>
               </xs:choice>
               <xs:element type="t:ExcludesValueType" name="Bitmask"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element substitutionGroup="t:SearchExpression" type="t:ExcludesType" name="Excludes"/>
   <xs:complexType name="IsEqualToType">
      <xs:complexContent>
         <xs:extension base="t:TwoOperandExpressionType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element substitutionGroup="t:SearchExpression" type="t:IsEqualToType" name="IsEqualTo"/>
   <xs:complexType name="IsNotEqualToType">
      <xs:complexContent>
         <xs:extension base="t:TwoOperandExpressionType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element substitutionGroup="t:SearchExpression" type="t:IsNotEqualToType" name="IsNotEqualTo"/>
   <xs:complexType name="IsGreaterThanType">
      <xs:complexContent>
         <xs:extension base="t:TwoOperandExpressionType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element substitutionGroup="t:SearchExpression" type="t:IsGreaterThanType" name="IsGreaterThan"/>
   <xs:complexType name="IsGreaterThanOrEqualToType">
      <xs:complexContent>
         <xs:extension base="t:TwoOperandExpressionType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element substitutionGroup="t:SearchExpression" type="t:IsGreaterThanOrEqualToType" name="IsGreaterThanOrEqualTo"/>
   <xs:complexType name="IsLessThanType">
      <xs:complexContent>
         <xs:extension base="t:TwoOperandExpressionType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element substitutionGroup="t:SearchExpression" type="t:IsLessThanType" name="IsLessThan"/>
   <xs:complexType name="IsLessThanOrEqualToType">
      <xs:complexContent>
         <xs:extension base="t:TwoOperandExpressionType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element substitutionGroup="t:SearchExpression" type="t:IsLessThanOrEqualToType" name="IsLessThanOrEqualTo"/>
   <xs:simpleType name="ContainmentModeType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="FullString"/>
         <xs:enumeration value="Prefixed"/>
         <xs:enumeration value="Substring"/>
         <xs:enumeration value="PrefixOnWords"/>
         <xs:enumeration value="ExactPhrase"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="ContainmentComparisonType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="Exact"/>
         <xs:enumeration value="IgnoreCase"/>
         <xs:enumeration value="IgnoreNonSpacingCharacters"/>
         <xs:enumeration value="Loose"/>
         <xs:enumeration value="IgnoreCaseAndNonSpacingCharacters"/>
         <xs:enumeration value="LooseAndIgnoreCase"/>
         <xs:enumeration value="LooseAndIgnoreNonSpace"/>
         <xs:enumeration value="LooseAndIgnoreCaseAndIgnoreNonSpace"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="ContainsExpressionType">
      <xs:complexContent>
         <xs:extension base="t:SearchExpressionType">
            <xs:sequence>
               <xs:choice maxOccurs="unbounded">
                  <xs:element ref="t:FieldURI"/>
                  <xs:element ref="t:IndexedFieldURI"/>
                  <xs:element ref="t:ExtendedFieldURI"/>
               </xs:choice>
               <xs:element type="t:ConstantValueType" name="Constant"/>
            </xs:sequence>
            <xs:attribute use="optional" type="t:ContainmentModeType" name="ContainmentMode"/>
            <xs:attribute use="optional" type="t:ContainmentComparisonType" name="ContainmentComparison"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element substitutionGroup="t:SearchExpression" type="t:ContainsExpressionType" name="Contains"/>
   <xs:complexType name="NotType">
      <xs:complexContent>
         <xs:extension base="t:SearchExpressionType">
            <xs:sequence>
               <xs:element ref="t:SearchExpression"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element substitutionGroup="t:SearchExpression" type="t:NotType" name="Not"/>
   <xs:complexType name="MultipleOperandBooleanExpressionType">
      <xs:complexContent>
         <xs:extension base="t:SearchExpressionType">
            <xs:sequence>
               <xs:choice maxOccurs="unbounded">
                  <xs:element ref="t:Exists"/>
                  <xs:element ref="t:Excludes"/>
                  <xs:element ref="t:IsEqualTo"/>
                  <xs:element ref="t:IsNotEqualTo"/>
                  <xs:element ref="t:IsGreaterThan"/>
                  <xs:element ref="t:IsGreaterThanOrEqualTo"/>
                  <xs:element ref="t:IsLessThan"/>
                  <xs:element ref="t:IsLessThanOrEqualTo"/>
                  <xs:element ref="t:Not"/>
                  <xs:element ref="t:And"/>
                  <xs:element ref="t:Or"/>
               </xs:choice>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="AndType">
      <xs:complexContent>
         <xs:extension base="t:MultipleOperandBooleanExpressionType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element substitutionGroup="t:SearchExpression" type="t:AndType" name="And"/>
   <xs:complexType name="OrType">
      <xs:complexContent>
         <xs:extension base="t:MultipleOperandBooleanExpressionType"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element substitutionGroup="t:SearchExpression" type="t:OrType" name="Or"/>
   <xs:complexType name="RestrictionType">
      <xs:choice maxOccurs="unbounded">
         <xs:element ref="t:Exists"/>
         <xs:element ref="t:Excludes"/>
         <xs:element ref="t:IsEqualTo"/>
         <xs:element ref="t:IsNotEqualTo"/>
         <xs:element ref="t:IsGreaterThan"/>
         <xs:element ref="t:IsGreaterThanOrEqualTo"/>
         <xs:element ref="t:IsLessThan"/>
         <xs:element ref="t:IsLessThanOrEqualTo"/>
         <xs:element ref="t:Not"/>
         <xs:element ref="t:And"/>
         <xs:element ref="t:Or"/>
      </xs:choice>
   </xs:complexType>
   <xs:simpleType name="SortDirectionType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="Ascending"/>
         <xs:enumeration value="Descending"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="FieldOrderType">
      <xs:sequence>
         <xs:choice maxOccurs="unbounded">
            <xs:element ref="t:FieldURI"/>
            <xs:element ref="t:IndexedFieldURI"/>
            <xs:element ref="t:ExtendedFieldURI"/>
         </xs:choice>
      </xs:sequence>
      <xs:attribute use="required" type="t:SortDirectionType" name="Order"/>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfFieldOrdersType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:FieldOrderType" name="FieldOrder"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfFolderNamesType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="xs:string" name="FolderName"/>
      </xs:sequence>
   </xs:complexType>
   <xs:simpleType name="WatermarkType">
      <xs:restriction base="t:NonEmptyStringType"/>
   </xs:simpleType>
   <xs:simpleType name="SubscriptionIdType">
      <xs:restriction base="t:NonEmptyStringType"/>
   </xs:simpleType>
   <xs:complexType name="BaseNotificationEventType">
      <xs:sequence>
         <xs:element type="t:WatermarkType" name="Watermark"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="BaseObjectChangedEventType">
      <xs:complexContent>
         <xs:extension base="t:BaseNotificationEventType">
            <xs:sequence>
               <xs:element type="xs:dateTime" name="TimeStamp"/>
               <xs:choice>
                  <xs:element type="t:FolderIdType" name="FolderId"/>
                  <xs:element type="t:ItemIdType" name="ItemId"/>
               </xs:choice>
               <xs:element type="t:FolderIdType" name="ParentFolderId"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ModifiedEventType">
      <xs:complexContent>
         <xs:extension base="t:BaseObjectChangedEventType">
            <xs:sequence>
               <xs:element maxOccurs="1" type="xs:int" name="UnreadCount" minOccurs="0"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="MovedCopiedEventType">
      <xs:complexContent>
         <xs:extension base="t:BaseObjectChangedEventType">
            <xs:sequence>
               <xs:choice>
                  <xs:element type="t:FolderIdType" name="OldFolderId"/>
                  <xs:element type="t:ItemIdType" name="OldItemId"/>
               </xs:choice>
               <xs:element type="t:FolderIdType" name="OldParentFolderId"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="NotificationType">
      <xs:sequence>
         <xs:element type="t:SubscriptionIdType" name="SubscriptionId"/>
         <xs:element type="t:WatermarkType" name="PreviousWatermark"/>
         <xs:element type="xs:boolean" name="MoreEvents"/>
         <xs:choice maxOccurs="unbounded" minOccurs="1">
            <xs:element type="t:MovedCopiedEventType" name="CopiedEvent"/>
            <xs:element type="t:BaseObjectChangedEventType" name="CreatedEvent"/>
            <xs:element type="t:BaseObjectChangedEventType" name="DeletedEvent"/>
            <xs:element type="t:ModifiedEventType" name="ModifiedEvent"/>
            <xs:element type="t:MovedCopiedEventType" name="MovedEvent"/>
            <xs:element type="t:BaseObjectChangedEventType" name="NewMailEvent"/>
            <xs:element type="t:BaseNotificationEventType" name="StatusEvent"/>
         </xs:choice>
      </xs:sequence>
   </xs:complexType>
   <xs:simpleType name="NotificationEventTypeType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="CopiedEvent"/>
         <xs:enumeration value="CreatedEvent"/>
         <xs:enumeration value="DeletedEvent"/>
         <xs:enumeration value="ModifiedEvent"/>
         <xs:enumeration value="MovedEvent"/>
         <xs:enumeration value="NewMailEvent"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="NonEmptyArrayOfNotificationEventTypesType">
      <xs:choice maxOccurs="unbounded" minOccurs="1">
         <xs:element type="t:NotificationEventTypeType" name="EventType"/>
      </xs:choice>
   </xs:complexType>
   <xs:simpleType name="SubscriptionTimeoutType">
      <xs:restriction base="xs:int">
         <xs:minInclusive value="1"/>
         <xs:maxInclusive value="1440"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="SubscriptionStatusFrequencyType">
      <xs:restriction base="xs:int">
         <xs:minInclusive value="1"/>
         <xs:maxInclusive value="1440"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType abstract="true" name="BaseSubscriptionRequestType">
      <xs:sequence>
         <xs:element type="t:NonEmptyArrayOfBaseFolderIdsType" name="FolderIds"/>
         <xs:element type="t:NonEmptyArrayOfNotificationEventTypesType" name="EventTypes"/>
         <xs:element type="t:WatermarkType" name="Watermark" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="PushSubscriptionRequestType">
      <xs:complexContent>
         <xs:extension base="t:BaseSubscriptionRequestType">
            <xs:sequence>
               <xs:element type="t:SubscriptionStatusFrequencyType" name="StatusFrequency"/>
               <xs:element type="xs:string" name="URL"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="PullSubscriptionRequestType">
      <xs:complexContent>
         <xs:extension base="t:BaseSubscriptionRequestType">
            <xs:sequence>
               <xs:element type="t:SubscriptionTimeoutType" name="Timeout"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:simpleType name="SubscriptionStatusType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="OK"/>
         <xs:enumeration value="Unsubscribe"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="SyncFolderItemsDeleteType">
      <xs:sequence>
         <xs:element type="t:ItemIdType" name="ItemId"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="SyncFolderItemsReadFlagType">
      <xs:sequence>
         <xs:element type="t:ItemIdType" name="ItemId"/>
         <xs:element type="xs:boolean" name="IsRead"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="SyncFolderItemsChangesType">
      <xs:sequence>
         <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element type="t:SyncFolderItemsCreateOrUpdateType" name="Create"/>
            <xs:element type="t:SyncFolderItemsCreateOrUpdateType" name="Update"/>
            <xs:element type="t:SyncFolderItemsDeleteType" name="Delete"/>
            <xs:element type="t:SyncFolderItemsReadFlagType" name="ReadFlagChange"/>
         </xs:choice>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="SyncFolderHierarchyCreateOrUpdateType">
      <xs:choice>
         <xs:element type="t:FolderType" name="Folder"/>
         <xs:element type="t:CalendarFolderType" name="CalendarFolder"/>
         <xs:element type="t:ContactsFolderType" name="ContactsFolder"/>
         <xs:element type="t:SearchFolderType" name="SearchFolder"/>
         <xs:element type="t:TasksFolderType" name="TasksFolder"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="SyncFolderHierarchyDeleteType">
      <xs:sequence>
         <xs:element type="t:FolderIdType" name="FolderId"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="SyncFolderHierarchyChangesType">
      <xs:sequence>
         <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element type="t:SyncFolderHierarchyCreateOrUpdateType" name="Create"/>
            <xs:element type="t:SyncFolderHierarchyCreateOrUpdateType" name="Update"/>
            <xs:element type="t:SyncFolderHierarchyDeleteType" name="Delete"/>
         </xs:choice>
      </xs:sequence>
   </xs:complexType>
   <xs:simpleType name="MaxSyncChangesReturnedType">
      <xs:restriction base="xs:int">
         <xs:minInclusive value="1"/>
         <xs:maxInclusive value="512"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="AvailabilityProxyRequestType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="CrossSite"/>
         <xs:enumeration value="CrossForest"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:element type="t:AvailabilityProxyRequestType" name="ProxyRequestTypeHeader"/>
   <xs:simpleType name="MeetingAttendeeType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="Organizer"/>
         <xs:enumeration value="Required"/>
         <xs:enumeration value="Optional"/>
         <xs:enumeration value="Room"/>
         <xs:enumeration value="Resource"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="CalendarEventDetails">
      <xs:sequence>
         <xs:element maxOccurs="1" type="xs:string" name="ID" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:string" name="Subject" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:string" name="Location" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:boolean" name="IsMeeting" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:boolean" name="IsRecurring" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:boolean" name="IsException" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:boolean" name="IsReminderSet" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:boolean" name="IsPrivate" minOccurs="1"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="CalendarEvent">
      <xs:sequence>
         <xs:element maxOccurs="1" type="xs:dateTime" name="StartTime" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:dateTime" name="EndTime" minOccurs="1"/>
         <xs:element maxOccurs="1" type="t:LegacyFreeBusyType" name="BusyType" minOccurs="1"/>
         <xs:element maxOccurs="1" type="t:CalendarEventDetails" name="CalendarEventDetails" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ArrayOfCalendarEvent">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:CalendarEvent" name="CalendarEvent" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="Duration">
      <xs:sequence>
         <xs:element maxOccurs="1" type="xs:dateTime" name="StartTime" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:dateTime" name="EndTime" minOccurs="1"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="EmailAddress">
      <xs:sequence>
         <xs:element maxOccurs="1" type="xs:string" name="Name" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:string" name="Address" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:string" name="RoutingType" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:element type="t:EmailAddress" name="Mailbox"/>
   <xs:simpleType name="FreeBusyViewType">
      <xs:list>
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="None"/>
               <xs:enumeration value="MergedOnly"/>
               <xs:enumeration value="FreeBusy"/>
               <xs:enumeration value="FreeBusyMerged"/>
               <xs:enumeration value="Detailed"/>
               <xs:enumeration value="DetailedMerged"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:list>
   </xs:simpleType>
   <xs:complexType name="FreeBusyViewOptionsType">
      <xs:sequence>
         <xs:element maxOccurs="1" type="t:Duration" name="TimeWindow" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:int" name="MergedFreeBusyIntervalInMinutes" minOccurs="0"/>
         <xs:element maxOccurs="1" type="t:FreeBusyViewType" name="RequestedView" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:element type="t:FreeBusyViewOptionsType" name="FreeBusyViewOptions"/>
   <xs:complexType name="WorkingPeriod">
      <xs:sequence>
         <xs:element maxOccurs="1" type="t:DaysOfWeekType" name="DayOfWeek" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:int" name="StartTimeInMinutes" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:int" name="EndTimeInMinutes" minOccurs="1"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ArrayOfWorkingPeriod">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:WorkingPeriod" name="WorkingPeriod" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="SerializableTimeZoneTime">
      <xs:sequence>
         <xs:element maxOccurs="1" type="xs:int" name="Bias" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:string" name="Time" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:short" name="DayOrder" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:short" name="Month" minOccurs="1"/>
         <xs:element maxOccurs="1" type="t:DayOfWeekType" name="DayOfWeek" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:string" name="Year" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="SerializableTimeZone">
      <xs:sequence>
         <xs:element maxOccurs="1" type="xs:int" name="Bias" minOccurs="1"/>
         <xs:element maxOccurs="1" type="t:SerializableTimeZoneTime" name="StandardTime" minOccurs="1"/>
         <xs:element maxOccurs="1" type="t:SerializableTimeZoneTime" name="DaylightTime" minOccurs="1"/>
      </xs:sequence>
   </xs:complexType>
   <xs:element type="t:SerializableTimeZone" name="TimeZone"/>
   <xs:complexType name="WorkingHours">
      <xs:sequence>
         <xs:element maxOccurs="1" type="t:SerializableTimeZone" name="TimeZone" minOccurs="1"/>
         <xs:element maxOccurs="1" type="t:ArrayOfWorkingPeriod" name="WorkingPeriodArray" minOccurs="1"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="FreeBusyView">
      <xs:sequence>
         <xs:element maxOccurs="1" type="t:FreeBusyViewType" name="FreeBusyViewType" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:string" name="MergedFreeBusy" minOccurs="0"/>
         <xs:element maxOccurs="1" type="t:ArrayOfCalendarEvent" name="CalendarEventArray" minOccurs="0"/>
         <xs:element maxOccurs="1" type="t:WorkingHours" name="WorkingHours" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="MailboxData">
      <xs:sequence>
         <xs:element maxOccurs="1" type="t:EmailAddress" name="Email" minOccurs="1"/>
         <xs:element maxOccurs="1" type="t:MeetingAttendeeType" name="AttendeeType" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:boolean" name="ExcludeConflicts" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ArrayOfMailboxData">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" nillable="true" type="t:MailboxData" name="MailboxData" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:simpleType name="SuggestionQuality">
      <xs:restriction base="xs:string">
         <xs:enumeration value="Excellent"/>
         <xs:enumeration value="Good"/>
         <xs:enumeration value="Fair"/>
         <xs:enumeration value="Poor"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="SuggestionsViewOptionsType">
      <xs:sequence>
         <xs:element maxOccurs="1" type="xs:int" name="GoodThreshold" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:int" name="MaximumResultsByDay" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:int" name="MaximumNonWorkHourResultsByDay" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:int" name="MeetingDurationInMinutes" minOccurs="0"/>
         <xs:element maxOccurs="1" type="t:SuggestionQuality" name="MinimumSuggestionQuality" minOccurs="0"/>
         <xs:element maxOccurs="1" type="t:Duration" name="DetailedSuggestionsWindow" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:dateTime" name="CurrentMeetingTime" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:string" name="GlobalObjectId" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:element type="t:SuggestionsViewOptionsType" name="SuggestionsViewOptions"/>
   <xs:complexType name="ArrayOfAttendeeConflictData">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
         <xs:element maxOccurs="1" nillable="true" type="t:UnknownAttendeeConflictData" name="UnknownAttendeeConflictData" minOccurs="1"/>
         <xs:element maxOccurs="1" nillable="true" type="t:IndividualAttendeeConflictData" name="IndividualAttendeeConflictData" minOccurs="1"/>
         <xs:element maxOccurs="1" nillable="true" type="t:TooBigGroupAttendeeConflictData" name="TooBigGroupAttendeeConflictData" minOccurs="1"/>
         <xs:element maxOccurs="1" nillable="true" type="t:GroupAttendeeConflictData" name="GroupAttendeeConflictData" minOccurs="1"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType abstract="true" name="AttendeeConflictData"/>
   <xs:complexType name="UnknownAttendeeConflictData">
      <xs:complexContent mixed="false">
         <xs:extension base="t:AttendeeConflictData"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="TooBigGroupAttendeeConflictData">
      <xs:complexContent mixed="false">
         <xs:extension base="t:AttendeeConflictData"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="IndividualAttendeeConflictData">
      <xs:complexContent mixed="false">
         <xs:extension base="t:AttendeeConflictData">
            <xs:sequence>
               <xs:element maxOccurs="1" type="t:LegacyFreeBusyType" name="BusyType" minOccurs="1"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="GroupAttendeeConflictData">
      <xs:complexContent mixed="false">
         <xs:extension base="t:AttendeeConflictData">
            <xs:sequence>
               <xs:element maxOccurs="1" type="xs:int" name="NumberOfMembers" minOccurs="1"/>
               <xs:element maxOccurs="1" type="xs:int" name="NumberOfMembersAvailable" minOccurs="1"/>
               <xs:element maxOccurs="1" type="xs:int" name="NumberOfMembersWithConflict" minOccurs="1"/>
               <xs:element maxOccurs="1" type="xs:int" name="NumberOfMembersWithNoData" minOccurs="1"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="Suggestion">
      <xs:sequence>
         <xs:element maxOccurs="1" type="xs:dateTime" name="MeetingTime" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:boolean" name="IsWorkTime" minOccurs="1"/>
         <xs:element maxOccurs="1" type="t:SuggestionQuality" name="SuggestionQuality" minOccurs="1"/>
         <xs:element maxOccurs="1" type="t:ArrayOfAttendeeConflictData" name="AttendeeConflictDataArray" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ArrayOfSuggestion">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:Suggestion" name="Suggestion" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="SuggestionDayResult">
      <xs:sequence>
         <xs:element maxOccurs="1" type="xs:dateTime" name="Date" minOccurs="1"/>
         <xs:element maxOccurs="1" type="t:SuggestionQuality" name="DayQuality" minOccurs="1"/>
         <xs:element maxOccurs="1" type="t:ArrayOfSuggestion" name="SuggestionArray" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ArrayOfSuggestionDayResult">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:SuggestionDayResult" name="SuggestionDayResult" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:simpleType name="OofState">
      <xs:restriction base="xs:string">
         <xs:enumeration value="Disabled"/>
         <xs:enumeration value="Enabled"/>
         <xs:enumeration value="Scheduled"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="ExternalAudience">
      <xs:restriction base="xs:string">
         <xs:enumeration value="None"/>
         <xs:enumeration value="Known"/>
         <xs:enumeration value="All"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="ReplyBody">
      <xs:sequence>
         <xs:element maxOccurs="1" type="xs:string" name="Message" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute use="optional" ref="xml:lang"/>
   </xs:complexType>
   <xs:complexType name="UserOofSettings">
      <xs:sequence>
         <xs:element maxOccurs="1" type="t:OofState" name="OofState" minOccurs="1"/>
         <xs:element maxOccurs="1" type="t:ExternalAudience" name="ExternalAudience" minOccurs="1"/>
         <xs:element maxOccurs="1" type="t:Duration" name="Duration" minOccurs="0"/>
         <xs:element maxOccurs="1" type="t:ReplyBody" name="InternalReply" minOccurs="0"/>
         <xs:element maxOccurs="1" type="t:ReplyBody" name="ExternalReply" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:element type="t:UserOofSettings" name="OofSettings"/>
   <xs:element type="t:UserOofSettings" name="UserOofSettings"/>
   <xs:complexType name="Value">
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attribute use="required" type="xs:string" name="Name"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:element type="t:Value" name="Value"/>
   <xs:simpleType name="IdFormatType">
      <xs:annotation>
         <xs:documentation>Surfaces the various id types that are supported for conversion</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="EwsLegacyId"/>
         <xs:enumeration value="EwsId"/>
         <xs:enumeration value="EntryId"/>
         <xs:enumeration value="HexEntryId"/>
         <xs:enumeration value="StoreId"/>
         <xs:enumeration value="OwaId"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType abstract="true" name="AlternateIdBaseType">
      <xs:annotation>
         <xs:documentation>
        Surfaces alternate representations of an item or folder id. No change key is included.
      </xs:documentation>
      </xs:annotation>
      <xs:attribute use="required" type="t:IdFormatType" name="Format"/>
   </xs:complexType>
   <xs:complexType name="AlternateIdType">
      <xs:annotation>
         <xs:documentation>
        Represents an alternate mailbox folder or item Id.
      </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="t:AlternateIdBaseType">
            <xs:attribute use="required" type="xs:string" name="Id"/>
            <xs:attribute use="required" type="t:NonEmptyStringType" name="Mailbox"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="AlternatePublicFolderIdType">
      <xs:annotation>
         <xs:documentation>
        Represents an alternate public folder Id.
      </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="t:AlternateIdBaseType">
            <xs:attribute use="required" type="xs:string" name="FolderId"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="AlternatePublicFolderItemIdType">
      <xs:annotation>
         <xs:documentation>
        Represents an alternate public folder item Id.
      </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="t:AlternatePublicFolderIdType">
            <xs:attribute use="required" type="xs:string" name="ItemId"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="NonEmptyArrayOfAlternateIdsType">
      <xs:annotation>
         <xs:documentation>
        A non-empty array of alternate Ids.
      </xs:documentation>
      </xs:annotation>
      <xs:choice maxOccurs="unbounded" minOccurs="1">
         <xs:element type="t:AlternateIdType" name="AlternateId"/>
         <xs:element type="t:AlternatePublicFolderIdType" name="AlternatePublicFolderId"/>
         <xs:element type="t:AlternatePublicFolderItemIdType" name="AlternatePublicFolderItemId"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="UserIdType">
      <xs:sequence>
         <xs:element maxOccurs="1" type="xs:string" name="SID" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:string" name="PrimarySmtpAddress" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:string" name="DisplayName" minOccurs="0"/>
         <xs:element maxOccurs="1" type="t:DistinguishedUserType" name="DistinguishedUser" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:simpleType name="DistinguishedUserType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="Default"/>
         <xs:enumeration value="Anonymous"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="ArrayOfPermissionsType">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
         <xs:element type="t:PermissionType" name="Permission"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="ArrayOfCalendarPermissionsType">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
         <xs:element type="t:CalendarPermissionType" name="CalendarPermission"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="ArrayOfUnknownEntriesType">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
         <xs:element type="xs:string" name="UnknownEntry"/>
      </xs:choice>
   </xs:complexType>
   <xs:simpleType name="PermissionReadAccessType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="None"/>
         <xs:enumeration value="FullDetails"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="CalendarPermissionReadAccessType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="None"/>
         <xs:enumeration value="TimeOnly"/>
         <xs:enumeration value="TimeAndSubjectAndLocation"/>
         <xs:enumeration value="FullDetails"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType abstract="true" name="BasePermissionType">
      <xs:annotation>
         <xs:documentation>A permission on a folder</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element maxOccurs="1" type="t:UserIdType" name="UserId" minOccurs="1"/>
         <xs:element maxOccurs="1" type="xs:boolean" name="CanCreateItems" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:boolean" name="CanCreateSubFolders" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:boolean" name="IsFolderOwner" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:boolean" name="IsFolderVisible" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:boolean" name="IsFolderContact" minOccurs="0"/>
         <xs:element maxOccurs="1" type="t:PermissionActionType" name="EditItems" minOccurs="0"/>
         <xs:element maxOccurs="1" type="t:PermissionActionType" name="DeleteItems" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="PermissionType">
      <xs:annotation>
         <xs:documentation>A permission on a folder</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="t:BasePermissionType">
            <xs:sequence>
               <xs:element maxOccurs="1" type="t:PermissionReadAccessType" name="ReadItems" minOccurs="0"/>
               <xs:element maxOccurs="1" type="t:PermissionLevelType" name="PermissionLevel" minOccurs="1"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="CalendarPermissionType">
      <xs:complexContent>
         <xs:extension base="t:BasePermissionType">
            <xs:sequence>
               <xs:element maxOccurs="1" type="t:CalendarPermissionReadAccessType" name="ReadItems" minOccurs="0"/>
               <xs:element maxOccurs="1" type="t:CalendarPermissionLevelType" name="CalendarPermissionLevel" minOccurs="1"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:simpleType name="PermissionActionType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="None"/>
         <xs:enumeration value="Owned"/>
         <xs:enumeration value="All"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="PermissionLevelType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="None"/>
         <xs:enumeration value="Owner"/>
         <xs:enumeration value="PublishingEditor"/>
         <xs:enumeration value="Editor"/>
         <xs:enumeration value="PublishingAuthor"/>
         <xs:enumeration value="Author"/>
         <xs:enumeration value="NoneditingAuthor"/>
         <xs:enumeration value="Reviewer"/>
         <xs:enumeration value="Contributor"/>
         <xs:enumeration value="Custom"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="CalendarPermissionLevelType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="None"/>
         <xs:enumeration value="Owner"/>
         <xs:enumeration value="PublishingEditor"/>
         <xs:enumeration value="Editor"/>
         <xs:enumeration value="PublishingAuthor"/>
         <xs:enumeration value="Author"/>
         <xs:enumeration value="NoneditingAuthor"/>
         <xs:enumeration value="Reviewer"/>
         <xs:enumeration value="Contributor"/>
         <xs:enumeration value="FreeBusyTimeOnly"/>
         <xs:enumeration value="FreeBusyTimeAndSubjectAndLocation"/>
         <xs:enumeration value="Custom"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="PermissionSetType">
      <xs:annotation>
         <xs:documentation>The set of permissions on a folder</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element type="t:ArrayOfPermissionsType" name="Permissions"/>
         <xs:element type="t:ArrayOfUnknownEntriesType" name="UnknownEntries" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="CalendarPermissionSetType">
      <xs:annotation>
         <xs:documentation>The set of permissions on a folder</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element type="t:ArrayOfCalendarPermissionsType" name="CalendarPermissions"/>
         <xs:element type="t:ArrayOfUnknownEntriesType" name="UnknownEntries" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="EffectiveRightsType">
      <xs:sequence>
         <xs:element type="xs:boolean" name="CreateAssociated"/>
         <xs:element type="xs:boolean" name="CreateContents"/>
         <xs:element type="xs:boolean" name="CreateHierarchy"/>
         <xs:element type="xs:boolean" name="Delete"/>
         <xs:element type="xs:boolean" name="Modify"/>
         <xs:element type="xs:boolean" name="Read"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ArrayOfDelegateUserType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:DelegateUserType" name="DelegateUser" minOccurs="1"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ArrayOfUserIdType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" type="t:UserIdType" name="UserId" minOccurs="1"/>
      </xs:sequence>
   </xs:complexType>
   <xs:simpleType name="DeliverMeetingRequestsType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="DelegatesOnly"/>
         <xs:enumeration value="DelegatesAndMe"/>
         <xs:enumeration value="DelegatesAndSendInformationToMe"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="DelegateUserType">
      <xs:sequence>
         <xs:element maxOccurs="1" type="t:UserIdType" name="UserId" minOccurs="1"/>
         <xs:element maxOccurs="1" type="t:DelegatePermissionsType" name="DelegatePermissions" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:boolean" name="ReceiveCopiesOfMeetingMessages" minOccurs="0"/>
         <xs:element maxOccurs="1" type="xs:boolean" name="ViewPrivateItems" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="DelegatePermissionsType">
      <xs:sequence>
         <xs:element maxOccurs="1" type="t:DelegateFolderPermissionLevelType" name="CalendarFolderPermissionLevel" minOccurs="0"/>
         <xs:element maxOccurs="1" type="t:DelegateFolderPermissionLevelType" name="TasksFolderPermissionLevel" minOccurs="0"/>
         <xs:element maxOccurs="1" type="t:DelegateFolderPermissionLevelType" name="InboxFolderPermissionLevel" minOccurs="0"/>
         <xs:element maxOccurs="1" type="t:DelegateFolderPermissionLevelType" name="ContactsFolderPermissionLevel" minOccurs="0"/>
         <xs:element maxOccurs="1" type="t:DelegateFolderPermissionLevelType" name="NotesFolderPermissionLevel" minOccurs="0"/>
         <xs:element maxOccurs="1" type="t:DelegateFolderPermissionLevelType" name="JournalFolderPermissionLevel" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:simpleType name="DelegateFolderPermissionLevelType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="None"/>
         <xs:enumeration value="Editor"/>
         <xs:enumeration value="Reviewer"/>
         <xs:enumeration value="Author"/>
         <xs:enumeration value="Custom"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="ConflictResultsType">
      <xs:sequence>
         <xs:element type="xs:int" name="Count"/>
      </xs:sequence>
   </xs:complexType>
</xs:schema>